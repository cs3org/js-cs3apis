// source: cs3/sharing/collaboration/v1beta1/collaboration_api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest');
goog.provide('proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField');
goog.provide('proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.FieldCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.cs3.sharing.collaboration.v1beta1.Share');
goog.require('proto.cs3.sharing.collaboration.v1beta1.SharePermissions');
goog.require('proto.cs3.sharing.collaboration.v1beta1.ShareReference');
goog.require('proto.cs3.types.v1beta1.Opaque');
goog.require('proto.google.protobuf.FieldMask');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.displayName = 'proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.oneofGroups_);
};
goog.inherits(proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.displayName = 'proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && proto.cs3.types.v1beta1.Opaque.toObject(includeInstance, f),
    ref: (f = msg.getRef()) && proto.cs3.sharing.collaboration.v1beta1.ShareReference.toObject(includeInstance, f),
    field: (f = msg.getField()) && proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.toObject(includeInstance, f),
    updateMask: (f = msg.getUpdateMask()) && proto.google.protobuf.FieldMask.toObject(includeInstance, f),
    share: (f = msg.getShare()) && proto.cs3.sharing.collaboration.v1beta1.Share.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest;
  return proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cs3.types.v1beta1.Opaque;
      reader.readMessage(value,proto.cs3.types.v1beta1.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = new proto.cs3.sharing.collaboration.v1beta1.ShareReference;
      reader.readMessage(value,proto.cs3.sharing.collaboration.v1beta1.ShareReference.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    case 3:
      var value = new proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField;
      reader.readMessage(value,proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.deserializeBinaryFromReader);
      msg.setField(value);
      break;
    case 4:
      var value = new proto.google.protobuf.FieldMask;
      reader.readMessage(value,proto.google.protobuf.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    case 5:
      var value = new proto.cs3.sharing.collaboration.v1beta1.Share;
      reader.readMessage(value,proto.cs3.sharing.collaboration.v1beta1.Share.deserializeBinaryFromReader);
      msg.setShare(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cs3.types.v1beta1.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cs3.sharing.collaboration.v1beta1.ShareReference.serializeBinaryToWriter
    );
  }
  f = message.getField();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.protobuf.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getShare();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cs3.sharing.collaboration.v1beta1.Share.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.FieldCase = {
  FIELD_NOT_SET: 0,
  PERMISSIONS: 2,
  DISPLAY_NAME: 3
};

/**
 * @return {proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.FieldCase}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.prototype.getFieldCase = function() {
  return /** @type {proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.FieldCase} */(jspb.Message.computeOneofCase(this, proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.toObject = function(includeInstance, msg) {
  var f, obj = {
    permissions: (f = msg.getPermissions()) && proto.cs3.sharing.collaboration.v1beta1.SharePermissions.toObject(includeInstance, f),
    displayName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField;
  return proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.cs3.sharing.collaboration.v1beta1.SharePermissions;
      reader.readMessage(value,proto.cs3.sharing.collaboration.v1beta1.SharePermissions.deserializeBinaryFromReader);
      msg.setPermissions(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPermissions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cs3.sharing.collaboration.v1beta1.SharePermissions.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional SharePermissions permissions = 2;
 * @return {?proto.cs3.sharing.collaboration.v1beta1.SharePermissions}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.prototype.getPermissions = function() {
  return /** @type{?proto.cs3.sharing.collaboration.v1beta1.SharePermissions} */ (
    jspb.Message.getWrapperField(this, proto.cs3.sharing.collaboration.v1beta1.SharePermissions, 2));
};


/**
 * @param {?proto.cs3.sharing.collaboration.v1beta1.SharePermissions|undefined} value
 * @return {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField} returns this
*/
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.prototype.setPermissions = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField} returns this
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.prototype.clearPermissions = function() {
  return this.setPermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.prototype.hasPermissions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string display_name = 3;
 * @return {string}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField} returns this
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.prototype.setDisplayName = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField} returns this
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.prototype.clearDisplayName = function() {
  return jspb.Message.setOneofField(this, 3, proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField.prototype.hasDisplayName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 1;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, proto.cs3.types.v1beta1.Opaque, 1));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest} returns this
*/
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest} returns this
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ShareReference ref = 2;
 * @return {?proto.cs3.sharing.collaboration.v1beta1.ShareReference}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.getRef = function() {
  return /** @type{?proto.cs3.sharing.collaboration.v1beta1.ShareReference} */ (
    jspb.Message.getWrapperField(this, proto.cs3.sharing.collaboration.v1beta1.ShareReference, 2));
};


/**
 * @param {?proto.cs3.sharing.collaboration.v1beta1.ShareReference|undefined} value
 * @return {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest} returns this
*/
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.setRef = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest} returns this
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.clearRef = function() {
  return this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.hasRef = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional UpdateField field = 3;
 * @return {?proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.getField = function() {
  return /** @type{?proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField} */ (
    jspb.Message.getWrapperField(this, proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField, 3));
};


/**
 * @param {?proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.UpdateField|undefined} value
 * @return {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest} returns this
*/
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.setField = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest} returns this
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.clearField = function() {
  return this.setField(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.hasField = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.FieldMask update_mask = 4;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.FieldMask, 4));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest} returns this
*/
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest} returns this
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Share share = 5;
 * @return {?proto.cs3.sharing.collaboration.v1beta1.Share}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.getShare = function() {
  return /** @type{?proto.cs3.sharing.collaboration.v1beta1.Share} */ (
    jspb.Message.getWrapperField(this, proto.cs3.sharing.collaboration.v1beta1.Share, 5));
};


/**
 * @param {?proto.cs3.sharing.collaboration.v1beta1.Share|undefined} value
 * @return {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest} returns this
*/
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.setShare = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest} returns this
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.clearShare = function() {
  return this.setShare(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest.prototype.hasShare = function() {
  return jspb.Message.getField(this, 5) != null;
};


