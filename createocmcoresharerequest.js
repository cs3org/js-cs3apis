// source: cs3/ocm/core/v1beta1/ocm_core_api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.cs3.identity.user.v1beta1.UserId');
goog.require('proto.cs3.sharing.ocm.v1beta1.Protocol');
goog.require('proto.cs3.types.v1beta1.Opaque');
goog.require('proto.cs3.types.v1beta1.Timestamp');

goog.forwardDeclare('proto.cs3.sharing.ocm.v1beta1.ShareType');
goog.forwardDeclare('proto.cs3.storage.provider.v1beta1.ResourceType');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.repeatedFields_, null);
};
goog.inherits(proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.displayName = 'proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && proto.cs3.types.v1beta1.Opaque.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    resourceId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    owner: (f = msg.getOwner()) && proto.cs3.identity.user.v1beta1.UserId.toObject(includeInstance, f),
    sender: (f = msg.getSender()) && proto.cs3.identity.user.v1beta1.UserId.toObject(includeInstance, f),
    shareWith: (f = msg.getShareWith()) && proto.cs3.identity.user.v1beta1.UserId.toObject(includeInstance, f),
    resourceType: jspb.Message.getFieldWithDefault(msg, 8, 0),
    shareType: jspb.Message.getFieldWithDefault(msg, 9, 0),
    expiration: (f = msg.getExpiration()) && proto.cs3.types.v1beta1.Timestamp.toObject(includeInstance, f),
    protocolsList: jspb.Message.toObjectList(msg.getProtocolsList(),
    proto.cs3.sharing.ocm.v1beta1.Protocol.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest;
  return proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cs3.types.v1beta1.Opaque;
      reader.readMessage(value,proto.cs3.types.v1beta1.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceId(value);
      break;
    case 5:
      var value = new proto.cs3.identity.user.v1beta1.UserId;
      reader.readMessage(value,proto.cs3.identity.user.v1beta1.UserId.deserializeBinaryFromReader);
      msg.setOwner(value);
      break;
    case 6:
      var value = new proto.cs3.identity.user.v1beta1.UserId;
      reader.readMessage(value,proto.cs3.identity.user.v1beta1.UserId.deserializeBinaryFromReader);
      msg.setSender(value);
      break;
    case 7:
      var value = new proto.cs3.identity.user.v1beta1.UserId;
      reader.readMessage(value,proto.cs3.identity.user.v1beta1.UserId.deserializeBinaryFromReader);
      msg.setShareWith(value);
      break;
    case 8:
      var value = /** @type {!proto.cs3.storage.provider.v1beta1.ResourceType} */ (reader.readEnum());
      msg.setResourceType(value);
      break;
    case 9:
      var value = /** @type {!proto.cs3.sharing.ocm.v1beta1.ShareType} */ (reader.readEnum());
      msg.setShareType(value);
      break;
    case 10:
      var value = new proto.cs3.types.v1beta1.Timestamp;
      reader.readMessage(value,proto.cs3.types.v1beta1.Timestamp.deserializeBinaryFromReader);
      msg.setExpiration(value);
      break;
    case 11:
      var value = new proto.cs3.sharing.ocm.v1beta1.Protocol;
      reader.readMessage(value,proto.cs3.sharing.ocm.v1beta1.Protocol.deserializeBinaryFromReader);
      msg.addProtocols(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cs3.types.v1beta1.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getResourceId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOwner();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cs3.identity.user.v1beta1.UserId.serializeBinaryToWriter
    );
  }
  f = message.getSender();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cs3.identity.user.v1beta1.UserId.serializeBinaryToWriter
    );
  }
  f = message.getShareWith();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.cs3.identity.user.v1beta1.UserId.serializeBinaryToWriter
    );
  }
  f = message.getResourceType();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getShareType();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getExpiration();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.cs3.types.v1beta1.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getProtocolsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.cs3.sharing.ocm.v1beta1.Protocol.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 1;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, proto.cs3.types.v1beta1.Opaque, 1));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} returns this
*/
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} returns this
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} returns this
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} returns this
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string resource_id = 4;
 * @return {string}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.getResourceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} returns this
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.setResourceId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional cs3.identity.user.v1beta1.UserId owner = 5;
 * @return {?proto.cs3.identity.user.v1beta1.UserId}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.getOwner = function() {
  return /** @type{?proto.cs3.identity.user.v1beta1.UserId} */ (
    jspb.Message.getWrapperField(this, proto.cs3.identity.user.v1beta1.UserId, 5));
};


/**
 * @param {?proto.cs3.identity.user.v1beta1.UserId|undefined} value
 * @return {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} returns this
*/
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.setOwner = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} returns this
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.clearOwner = function() {
  return this.setOwner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional cs3.identity.user.v1beta1.UserId sender = 6;
 * @return {?proto.cs3.identity.user.v1beta1.UserId}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.getSender = function() {
  return /** @type{?proto.cs3.identity.user.v1beta1.UserId} */ (
    jspb.Message.getWrapperField(this, proto.cs3.identity.user.v1beta1.UserId, 6));
};


/**
 * @param {?proto.cs3.identity.user.v1beta1.UserId|undefined} value
 * @return {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} returns this
*/
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.setSender = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} returns this
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.clearSender = function() {
  return this.setSender(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.hasSender = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional cs3.identity.user.v1beta1.UserId share_with = 7;
 * @return {?proto.cs3.identity.user.v1beta1.UserId}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.getShareWith = function() {
  return /** @type{?proto.cs3.identity.user.v1beta1.UserId} */ (
    jspb.Message.getWrapperField(this, proto.cs3.identity.user.v1beta1.UserId, 7));
};


/**
 * @param {?proto.cs3.identity.user.v1beta1.UserId|undefined} value
 * @return {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} returns this
*/
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.setShareWith = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} returns this
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.clearShareWith = function() {
  return this.setShareWith(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.hasShareWith = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional cs3.storage.provider.v1beta1.ResourceType resource_type = 8;
 * @return {!proto.cs3.storage.provider.v1beta1.ResourceType}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.getResourceType = function() {
  return /** @type {!proto.cs3.storage.provider.v1beta1.ResourceType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.ResourceType} value
 * @return {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} returns this
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.setResourceType = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional cs3.sharing.ocm.v1beta1.ShareType share_type = 9;
 * @return {!proto.cs3.sharing.ocm.v1beta1.ShareType}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.getShareType = function() {
  return /** @type {!proto.cs3.sharing.ocm.v1beta1.ShareType} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.ShareType} value
 * @return {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} returns this
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.setShareType = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional cs3.types.v1beta1.Timestamp expiration = 10;
 * @return {?proto.cs3.types.v1beta1.Timestamp}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.getExpiration = function() {
  return /** @type{?proto.cs3.types.v1beta1.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.cs3.types.v1beta1.Timestamp, 10));
};


/**
 * @param {?proto.cs3.types.v1beta1.Timestamp|undefined} value
 * @return {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} returns this
*/
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.setExpiration = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} returns this
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.clearExpiration = function() {
  return this.setExpiration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.hasExpiration = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated cs3.sharing.ocm.v1beta1.Protocol protocols = 11;
 * @return {!Array<!proto.cs3.sharing.ocm.v1beta1.Protocol>}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.getProtocolsList = function() {
  return /** @type{!Array<!proto.cs3.sharing.ocm.v1beta1.Protocol>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cs3.sharing.ocm.v1beta1.Protocol, 11));
};


/**
 * @param {!Array<!proto.cs3.sharing.ocm.v1beta1.Protocol>} value
 * @return {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} returns this
*/
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.setProtocolsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.Protocol=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cs3.sharing.ocm.v1beta1.Protocol}
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.addProtocols = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.cs3.sharing.ocm.v1beta1.Protocol, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} returns this
 */
proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.prototype.clearProtocolsList = function() {
  return this.setProtocolsList([]);
};


