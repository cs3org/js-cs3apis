/**
 * @fileoverview gRPC-Web generated client stub for cs3.ocm.invite.v1beta1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: cs3/ocm/invite/v1beta1/invite_api.proto


/* eslint-disable */
// @ts-nocheck


goog.provide('proto.cs3.ocm.invite.v1beta1.InviteAPIClient');
goog.provide('proto.cs3.ocm.invite.v1beta1.InviteAPIPromiseClient');

goog.require('grpc.web.MethodDescriptor');
goog.require('grpc.web.MethodType');
goog.require('grpc.web.GrpcWebClientBase');
goog.require('grpc.web.AbstractClientBase');
goog.require('grpc.web.ClientReadableStream');
goog.require('grpc.web.RpcError');
goog.require('proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest');
goog.require('proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse');
goog.require('proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserRequest');
goog.require('proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserResponse');
goog.require('proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest');
goog.require('proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse');
goog.require('proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest');
goog.require('proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse');
goog.require('proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest');
goog.require('proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse');
goog.require('proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest');
goog.require('proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse');
goog.require('proto.cs3.ocm.invite.v1beta1.ListInviteTokensRequest');
goog.require('proto.cs3.ocm.invite.v1beta1.ListInviteTokensResponse');

goog.requireType('grpc.web.ClientOptions');



goog.scope(function() {

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.cs3.ocm.invite.v1beta1.InviteAPIClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.cs3.ocm.invite.v1beta1.InviteAPIPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest,
 *   !proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse>}
 */
const methodDescriptor_InviteAPI_GenerateInviteToken = new grpc.web.MethodDescriptor(
  '/cs3.ocm.invite.v1beta1.InviteAPI/GenerateInviteToken',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest,
  proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse,
  /**
   * @param {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.ocm.invite.v1beta1.InviteAPIClient.prototype.generateInviteToken =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.ocm.invite.v1beta1.InviteAPI/GenerateInviteToken',
      request,
      metadata || {},
      methodDescriptor_InviteAPI_GenerateInviteToken,
      callback);
};


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.ocm.invite.v1beta1.InviteAPIPromiseClient.prototype.generateInviteToken =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.ocm.invite.v1beta1.InviteAPI/GenerateInviteToken',
      request,
      metadata || {},
      methodDescriptor_InviteAPI_GenerateInviteToken);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.invite.v1beta1.ListInviteTokensRequest,
 *   !proto.cs3.ocm.invite.v1beta1.ListInviteTokensResponse>}
 */
const methodDescriptor_InviteAPI_ListInviteTokens = new grpc.web.MethodDescriptor(
  '/cs3.ocm.invite.v1beta1.InviteAPI/ListInviteTokens',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.invite.v1beta1.ListInviteTokensRequest,
  proto.cs3.ocm.invite.v1beta1.ListInviteTokensResponse,
  /**
   * @param {!proto.cs3.ocm.invite.v1beta1.ListInviteTokensRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.invite.v1beta1.ListInviteTokensResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.ListInviteTokensRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.invite.v1beta1.ListInviteTokensResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.invite.v1beta1.ListInviteTokensResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.ocm.invite.v1beta1.InviteAPIClient.prototype.listInviteTokens =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.ocm.invite.v1beta1.InviteAPI/ListInviteTokens',
      request,
      metadata || {},
      methodDescriptor_InviteAPI_ListInviteTokens,
      callback);
};


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.ListInviteTokensRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.invite.v1beta1.ListInviteTokensResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.ocm.invite.v1beta1.InviteAPIPromiseClient.prototype.listInviteTokens =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.ocm.invite.v1beta1.InviteAPI/ListInviteTokens',
      request,
      metadata || {},
      methodDescriptor_InviteAPI_ListInviteTokens);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest,
 *   !proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse>}
 */
const methodDescriptor_InviteAPI_ForwardInvite = new grpc.web.MethodDescriptor(
  '/cs3.ocm.invite.v1beta1.InviteAPI/ForwardInvite',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest,
  proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse,
  /**
   * @param {!proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.ocm.invite.v1beta1.InviteAPIClient.prototype.forwardInvite =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.ocm.invite.v1beta1.InviteAPI/ForwardInvite',
      request,
      metadata || {},
      methodDescriptor_InviteAPI_ForwardInvite,
      callback);
};


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.ocm.invite.v1beta1.InviteAPIPromiseClient.prototype.forwardInvite =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.ocm.invite.v1beta1.InviteAPI/ForwardInvite',
      request,
      metadata || {},
      methodDescriptor_InviteAPI_ForwardInvite);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest,
 *   !proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse>}
 */
const methodDescriptor_InviteAPI_AcceptInvite = new grpc.web.MethodDescriptor(
  '/cs3.ocm.invite.v1beta1.InviteAPI/AcceptInvite',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest,
  proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse,
  /**
   * @param {!proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.ocm.invite.v1beta1.InviteAPIClient.prototype.acceptInvite =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.ocm.invite.v1beta1.InviteAPI/AcceptInvite',
      request,
      metadata || {},
      methodDescriptor_InviteAPI_AcceptInvite,
      callback);
};


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.ocm.invite.v1beta1.InviteAPIPromiseClient.prototype.acceptInvite =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.ocm.invite.v1beta1.InviteAPI/AcceptInvite',
      request,
      metadata || {},
      methodDescriptor_InviteAPI_AcceptInvite);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest,
 *   !proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse>}
 */
const methodDescriptor_InviteAPI_GetAcceptedUser = new grpc.web.MethodDescriptor(
  '/cs3.ocm.invite.v1beta1.InviteAPI/GetAcceptedUser',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest,
  proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse,
  /**
   * @param {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.ocm.invite.v1beta1.InviteAPIClient.prototype.getAcceptedUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.ocm.invite.v1beta1.InviteAPI/GetAcceptedUser',
      request,
      metadata || {},
      methodDescriptor_InviteAPI_GetAcceptedUser,
      callback);
};


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.ocm.invite.v1beta1.InviteAPIPromiseClient.prototype.getAcceptedUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.ocm.invite.v1beta1.InviteAPI/GetAcceptedUser',
      request,
      metadata || {},
      methodDescriptor_InviteAPI_GetAcceptedUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest,
 *   !proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse>}
 */
const methodDescriptor_InviteAPI_FindAcceptedUsers = new grpc.web.MethodDescriptor(
  '/cs3.ocm.invite.v1beta1.InviteAPI/FindAcceptedUsers',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest,
  proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse,
  /**
   * @param {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.ocm.invite.v1beta1.InviteAPIClient.prototype.findAcceptedUsers =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.ocm.invite.v1beta1.InviteAPI/FindAcceptedUsers',
      request,
      metadata || {},
      methodDescriptor_InviteAPI_FindAcceptedUsers,
      callback);
};


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.ocm.invite.v1beta1.InviteAPIPromiseClient.prototype.findAcceptedUsers =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.ocm.invite.v1beta1.InviteAPI/FindAcceptedUsers',
      request,
      metadata || {},
      methodDescriptor_InviteAPI_FindAcceptedUsers);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserRequest,
 *   !proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserResponse>}
 */
const methodDescriptor_InviteAPI_DeleteAcceptedUser = new grpc.web.MethodDescriptor(
  '/cs3.ocm.invite.v1beta1.InviteAPI/DeleteAcceptedUser',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserRequest,
  proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserResponse,
  /**
   * @param {!proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.ocm.invite.v1beta1.InviteAPIClient.prototype.deleteAcceptedUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.ocm.invite.v1beta1.InviteAPI/DeleteAcceptedUser',
      request,
      metadata || {},
      methodDescriptor_InviteAPI_DeleteAcceptedUser,
      callback);
};


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.ocm.invite.v1beta1.InviteAPIPromiseClient.prototype.deleteAcceptedUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.ocm.invite.v1beta1.InviteAPI/DeleteAcceptedUser',
      request,
      metadata || {},
      methodDescriptor_InviteAPI_DeleteAcceptedUser);
};


}); // goog.scope

