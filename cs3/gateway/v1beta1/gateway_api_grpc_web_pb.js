/**
 * @fileoverview gRPC-Web generated client stub for cs3.gateway.v1beta1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: cs3/gateway/v1beta1/gateway_api.proto


/* eslint-disable */
// @ts-nocheck


goog.provide('proto.cs3.gateway.v1beta1.GatewayAPIClient');
goog.provide('proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient');

goog.require('grpc.web.MethodDescriptor');
goog.require('grpc.web.MethodType');
goog.require('grpc.web.GrpcWebClientBase');
goog.require('grpc.web.AbstractClientBase');
goog.require('grpc.web.ClientReadableStream');
goog.require('grpc.web.RpcError');
goog.require('proto.cs3.app.provider.v1beta1.OpenInAppResponse');
goog.require('proto.cs3.app.registry.v1beta1.AddAppProviderRequest');
goog.require('proto.cs3.app.registry.v1beta1.AddAppProviderResponse');
goog.require('proto.cs3.app.registry.v1beta1.GetAppProvidersRequest');
goog.require('proto.cs3.app.registry.v1beta1.GetAppProvidersResponse');
goog.require('proto.cs3.app.registry.v1beta1.GetDefaultAppProviderForMimeTypeRequest');
goog.require('proto.cs3.app.registry.v1beta1.GetDefaultAppProviderForMimeTypeResponse');
goog.require('proto.cs3.app.registry.v1beta1.ListAppProvidersRequest');
goog.require('proto.cs3.app.registry.v1beta1.ListAppProvidersResponse');
goog.require('proto.cs3.app.registry.v1beta1.ListSupportedMimeTypesRequest');
goog.require('proto.cs3.app.registry.v1beta1.ListSupportedMimeTypesResponse');
goog.require('proto.cs3.app.registry.v1beta1.SetDefaultAppProviderForMimeTypeRequest');
goog.require('proto.cs3.app.registry.v1beta1.SetDefaultAppProviderForMimeTypeResponse');
goog.require('proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest');
goog.require('proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse');
goog.require('proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest');
goog.require('proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse');
goog.require('proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest');
goog.require('proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse');
goog.require('proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest');
goog.require('proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse');
goog.require('proto.cs3.auth.registry.v1beta1.ListAuthProvidersRequest');
goog.require('proto.cs3.gateway.v1beta1.AuthenticateRequest');
goog.require('proto.cs3.gateway.v1beta1.AuthenticateResponse');
goog.require('proto.cs3.gateway.v1beta1.GetQuotaRequest');
goog.require('proto.cs3.gateway.v1beta1.InitiateFileDownloadResponse');
goog.require('proto.cs3.gateway.v1beta1.InitiateFileUploadResponse');
goog.require('proto.cs3.gateway.v1beta1.ListAuthProvidersResponse');
goog.require('proto.cs3.gateway.v1beta1.ListExistingReceivedSharesResponse');
goog.require('proto.cs3.gateway.v1beta1.OpenInAppRequest');
goog.require('proto.cs3.gateway.v1beta1.WhoAmIRequest');
goog.require('proto.cs3.gateway.v1beta1.WhoAmIResponse');
goog.require('proto.cs3.identity.group.v1beta1.FindGroupsRequest');
goog.require('proto.cs3.identity.group.v1beta1.FindGroupsResponse');
goog.require('proto.cs3.identity.group.v1beta1.GetGroupByClaimRequest');
goog.require('proto.cs3.identity.group.v1beta1.GetGroupByClaimResponse');
goog.require('proto.cs3.identity.group.v1beta1.GetGroupRequest');
goog.require('proto.cs3.identity.group.v1beta1.GetGroupResponse');
goog.require('proto.cs3.identity.group.v1beta1.GetMembersRequest');
goog.require('proto.cs3.identity.group.v1beta1.GetMembersResponse');
goog.require('proto.cs3.identity.group.v1beta1.HasMemberRequest');
goog.require('proto.cs3.identity.group.v1beta1.HasMemberResponse');
goog.require('proto.cs3.identity.user.v1beta1.FindUsersRequest');
goog.require('proto.cs3.identity.user.v1beta1.FindUsersResponse');
goog.require('proto.cs3.identity.user.v1beta1.GetUserByClaimRequest');
goog.require('proto.cs3.identity.user.v1beta1.GetUserByClaimResponse');
goog.require('proto.cs3.identity.user.v1beta1.GetUserGroupsRequest');
goog.require('proto.cs3.identity.user.v1beta1.GetUserGroupsResponse');
goog.require('proto.cs3.identity.user.v1beta1.GetUserRequest');
goog.require('proto.cs3.identity.user.v1beta1.GetUserResponse');
goog.require('proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest');
goog.require('proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareResponse');
goog.require('proto.cs3.ocm.core.v1beta1.DeleteOCMCoreShareRequest');
goog.require('proto.cs3.ocm.core.v1beta1.DeleteOCMCoreShareResponse');
goog.require('proto.cs3.ocm.core.v1beta1.UpdateOCMCoreShareRequest');
goog.require('proto.cs3.ocm.core.v1beta1.UpdateOCMCoreShareResponse');
goog.require('proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest');
goog.require('proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse');
goog.require('proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserRequest');
goog.require('proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserResponse');
goog.require('proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest');
goog.require('proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse');
goog.require('proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest');
goog.require('proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse');
goog.require('proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest');
goog.require('proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse');
goog.require('proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest');
goog.require('proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse');
goog.require('proto.cs3.ocm.invite.v1beta1.ListInviteTokensRequest');
goog.require('proto.cs3.ocm.invite.v1beta1.ListInviteTokensResponse');
goog.require('proto.cs3.ocm.provider.v1beta1.GetInfoByDomainRequest');
goog.require('proto.cs3.ocm.provider.v1beta1.GetInfoByDomainResponse');
goog.require('proto.cs3.ocm.provider.v1beta1.IsProviderAllowedRequest');
goog.require('proto.cs3.ocm.provider.v1beta1.IsProviderAllowedResponse');
goog.require('proto.cs3.ocm.provider.v1beta1.ListAllProvidersRequest');
goog.require('proto.cs3.ocm.provider.v1beta1.ListAllProvidersResponse');
goog.require('proto.cs3.permissions.v1beta1.CheckPermissionRequest');
goog.require('proto.cs3.permissions.v1beta1.CheckPermissionResponse');
goog.require('proto.cs3.preferences.v1beta1.GetKeyRequest');
goog.require('proto.cs3.preferences.v1beta1.GetKeyResponse');
goog.require('proto.cs3.preferences.v1beta1.SetKeyRequest');
goog.require('proto.cs3.preferences.v1beta1.SetKeyResponse');
goog.require('proto.cs3.sharing.collaboration.v1beta1.CreateShareRequest');
goog.require('proto.cs3.sharing.collaboration.v1beta1.CreateShareResponse');
goog.require('proto.cs3.sharing.collaboration.v1beta1.GetReceivedShareRequest');
goog.require('proto.cs3.sharing.collaboration.v1beta1.GetReceivedShareResponse');
goog.require('proto.cs3.sharing.collaboration.v1beta1.GetShareRequest');
goog.require('proto.cs3.sharing.collaboration.v1beta1.GetShareResponse');
goog.require('proto.cs3.sharing.collaboration.v1beta1.ListReceivedSharesRequest');
goog.require('proto.cs3.sharing.collaboration.v1beta1.ListReceivedSharesResponse');
goog.require('proto.cs3.sharing.collaboration.v1beta1.ListSharesRequest');
goog.require('proto.cs3.sharing.collaboration.v1beta1.ListSharesResponse');
goog.require('proto.cs3.sharing.collaboration.v1beta1.RemoveShareRequest');
goog.require('proto.cs3.sharing.collaboration.v1beta1.RemoveShareResponse');
goog.require('proto.cs3.sharing.collaboration.v1beta1.UpdateReceivedShareRequest');
goog.require('proto.cs3.sharing.collaboration.v1beta1.UpdateReceivedShareResponse');
goog.require('proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest');
goog.require('proto.cs3.sharing.collaboration.v1beta1.UpdateShareResponse');
goog.require('proto.cs3.sharing.link.v1beta1.CreatePublicShareRequest');
goog.require('proto.cs3.sharing.link.v1beta1.CreatePublicShareResponse');
goog.require('proto.cs3.sharing.link.v1beta1.GetPublicShareByTokenRequest');
goog.require('proto.cs3.sharing.link.v1beta1.GetPublicShareByTokenResponse');
goog.require('proto.cs3.sharing.link.v1beta1.GetPublicShareRequest');
goog.require('proto.cs3.sharing.link.v1beta1.GetPublicShareResponse');
goog.require('proto.cs3.sharing.link.v1beta1.ListPublicSharesRequest');
goog.require('proto.cs3.sharing.link.v1beta1.ListPublicSharesResponse');
goog.require('proto.cs3.sharing.link.v1beta1.RemovePublicShareRequest');
goog.require('proto.cs3.sharing.link.v1beta1.RemovePublicShareResponse');
goog.require('proto.cs3.sharing.link.v1beta1.UpdatePublicShareRequest');
goog.require('proto.cs3.sharing.link.v1beta1.UpdatePublicShareResponse');
goog.require('proto.cs3.sharing.ocm.v1beta1.CreateOCMShareRequest');
goog.require('proto.cs3.sharing.ocm.v1beta1.CreateOCMShareResponse');
goog.require('proto.cs3.sharing.ocm.v1beta1.GetOCMShareByTokenRequest');
goog.require('proto.cs3.sharing.ocm.v1beta1.GetOCMShareByTokenResponse');
goog.require('proto.cs3.sharing.ocm.v1beta1.GetOCMShareRequest');
goog.require('proto.cs3.sharing.ocm.v1beta1.GetOCMShareResponse');
goog.require('proto.cs3.sharing.ocm.v1beta1.GetReceivedOCMShareRequest');
goog.require('proto.cs3.sharing.ocm.v1beta1.GetReceivedOCMShareResponse');
goog.require('proto.cs3.sharing.ocm.v1beta1.ListOCMSharesRequest');
goog.require('proto.cs3.sharing.ocm.v1beta1.ListOCMSharesResponse');
goog.require('proto.cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesRequest');
goog.require('proto.cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesResponse');
goog.require('proto.cs3.sharing.ocm.v1beta1.RemoveOCMShareRequest');
goog.require('proto.cs3.sharing.ocm.v1beta1.RemoveOCMShareResponse');
goog.require('proto.cs3.sharing.ocm.v1beta1.UpdateOCMShareRequest');
goog.require('proto.cs3.sharing.ocm.v1beta1.UpdateOCMShareResponse');
goog.require('proto.cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareRequest');
goog.require('proto.cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareResponse');
goog.require('proto.cs3.storage.provider.v1beta1.CreateContainerRequest');
goog.require('proto.cs3.storage.provider.v1beta1.CreateContainerResponse');
goog.require('proto.cs3.storage.provider.v1beta1.CreateHomeRequest');
goog.require('proto.cs3.storage.provider.v1beta1.CreateHomeResponse');
goog.require('proto.cs3.storage.provider.v1beta1.CreateStorageSpaceRequest');
goog.require('proto.cs3.storage.provider.v1beta1.CreateStorageSpaceResponse');
goog.require('proto.cs3.storage.provider.v1beta1.CreateSymlinkRequest');
goog.require('proto.cs3.storage.provider.v1beta1.CreateSymlinkResponse');
goog.require('proto.cs3.storage.provider.v1beta1.DeleteRequest');
goog.require('proto.cs3.storage.provider.v1beta1.DeleteResponse');
goog.require('proto.cs3.storage.provider.v1beta1.DeleteStorageSpaceRequest');
goog.require('proto.cs3.storage.provider.v1beta1.DeleteStorageSpaceResponse');
goog.require('proto.cs3.storage.provider.v1beta1.GetHomeRequest');
goog.require('proto.cs3.storage.provider.v1beta1.GetHomeResponse');
goog.require('proto.cs3.storage.provider.v1beta1.GetLockRequest');
goog.require('proto.cs3.storage.provider.v1beta1.GetLockResponse');
goog.require('proto.cs3.storage.provider.v1beta1.GetPathRequest');
goog.require('proto.cs3.storage.provider.v1beta1.GetPathResponse');
goog.require('proto.cs3.storage.provider.v1beta1.GetQuotaResponse');
goog.require('proto.cs3.storage.provider.v1beta1.InitiateFileDownloadRequest');
goog.require('proto.cs3.storage.provider.v1beta1.InitiateFileUploadRequest');
goog.require('proto.cs3.storage.provider.v1beta1.ListContainerRequest');
goog.require('proto.cs3.storage.provider.v1beta1.ListContainerResponse');
goog.require('proto.cs3.storage.provider.v1beta1.ListContainerStreamRequest');
goog.require('proto.cs3.storage.provider.v1beta1.ListContainerStreamResponse');
goog.require('proto.cs3.storage.provider.v1beta1.ListFileVersionsRequest');
goog.require('proto.cs3.storage.provider.v1beta1.ListFileVersionsResponse');
goog.require('proto.cs3.storage.provider.v1beta1.ListRecycleRequest');
goog.require('proto.cs3.storage.provider.v1beta1.ListRecycleResponse');
goog.require('proto.cs3.storage.provider.v1beta1.ListRecycleStreamRequest');
goog.require('proto.cs3.storage.provider.v1beta1.ListRecycleStreamResponse');
goog.require('proto.cs3.storage.provider.v1beta1.ListStorageSpacesRequest');
goog.require('proto.cs3.storage.provider.v1beta1.ListStorageSpacesResponse');
goog.require('proto.cs3.storage.provider.v1beta1.MoveRequest');
goog.require('proto.cs3.storage.provider.v1beta1.MoveResponse');
goog.require('proto.cs3.storage.provider.v1beta1.PurgeRecycleRequest');
goog.require('proto.cs3.storage.provider.v1beta1.PurgeRecycleResponse');
goog.require('proto.cs3.storage.provider.v1beta1.RefreshLockRequest');
goog.require('proto.cs3.storage.provider.v1beta1.RefreshLockResponse');
goog.require('proto.cs3.storage.provider.v1beta1.RestoreFileVersionRequest');
goog.require('proto.cs3.storage.provider.v1beta1.RestoreFileVersionResponse');
goog.require('proto.cs3.storage.provider.v1beta1.RestoreRecycleItemRequest');
goog.require('proto.cs3.storage.provider.v1beta1.RestoreRecycleItemResponse');
goog.require('proto.cs3.storage.provider.v1beta1.SetArbitraryMetadataRequest');
goog.require('proto.cs3.storage.provider.v1beta1.SetArbitraryMetadataResponse');
goog.require('proto.cs3.storage.provider.v1beta1.SetLockRequest');
goog.require('proto.cs3.storage.provider.v1beta1.SetLockResponse');
goog.require('proto.cs3.storage.provider.v1beta1.StatRequest');
goog.require('proto.cs3.storage.provider.v1beta1.StatResponse');
goog.require('proto.cs3.storage.provider.v1beta1.TouchFileRequest');
goog.require('proto.cs3.storage.provider.v1beta1.TouchFileResponse');
goog.require('proto.cs3.storage.provider.v1beta1.UnlockRequest');
goog.require('proto.cs3.storage.provider.v1beta1.UnlockResponse');
goog.require('proto.cs3.storage.provider.v1beta1.UnsetArbitraryMetadataRequest');
goog.require('proto.cs3.storage.provider.v1beta1.UnsetArbitraryMetadataResponse');
goog.require('proto.cs3.storage.provider.v1beta1.UpdateStorageSpaceRequest');
goog.require('proto.cs3.storage.provider.v1beta1.UpdateStorageSpaceResponse');
goog.require('proto.cs3.tx.v1beta1.CancelTransferRequest');
goog.require('proto.cs3.tx.v1beta1.CancelTransferResponse');
goog.require('proto.cs3.tx.v1beta1.CreateTransferRequest');
goog.require('proto.cs3.tx.v1beta1.CreateTransferResponse');
goog.require('proto.cs3.tx.v1beta1.GetTransferStatusRequest');
goog.require('proto.cs3.tx.v1beta1.GetTransferStatusResponse');
goog.require('proto.cs3.tx.v1beta1.ListTransfersRequest');
goog.require('proto.cs3.tx.v1beta1.ListTransfersResponse');
goog.require('proto.cs3.tx.v1beta1.RetryTransferRequest');
goog.require('proto.cs3.tx.v1beta1.RetryTransferResponse');

goog.requireType('grpc.web.ClientOptions');



goog.scope(function() {

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.gateway.v1beta1.AuthenticateRequest,
 *   !proto.cs3.gateway.v1beta1.AuthenticateResponse>}
 */
const methodDescriptor_GatewayAPI_Authenticate = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/Authenticate',
  grpc.web.MethodType.UNARY,
  proto.cs3.gateway.v1beta1.AuthenticateRequest,
  proto.cs3.gateway.v1beta1.AuthenticateResponse,
  /**
   * @param {!proto.cs3.gateway.v1beta1.AuthenticateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.gateway.v1beta1.AuthenticateResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.gateway.v1beta1.AuthenticateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.gateway.v1beta1.AuthenticateResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.gateway.v1beta1.AuthenticateResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.authenticate =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/Authenticate',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_Authenticate,
      callback);
};


/**
 * @param {!proto.cs3.gateway.v1beta1.AuthenticateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.gateway.v1beta1.AuthenticateResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.authenticate =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/Authenticate',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_Authenticate);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.gateway.v1beta1.WhoAmIRequest,
 *   !proto.cs3.gateway.v1beta1.WhoAmIResponse>}
 */
const methodDescriptor_GatewayAPI_WhoAmI = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/WhoAmI',
  grpc.web.MethodType.UNARY,
  proto.cs3.gateway.v1beta1.WhoAmIRequest,
  proto.cs3.gateway.v1beta1.WhoAmIResponse,
  /**
   * @param {!proto.cs3.gateway.v1beta1.WhoAmIRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.gateway.v1beta1.WhoAmIResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.gateway.v1beta1.WhoAmIRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.gateway.v1beta1.WhoAmIResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.gateway.v1beta1.WhoAmIResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.whoAmI =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/WhoAmI',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_WhoAmI,
      callback);
};


/**
 * @param {!proto.cs3.gateway.v1beta1.WhoAmIRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.gateway.v1beta1.WhoAmIResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.whoAmI =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/WhoAmI',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_WhoAmI);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest,
 *   !proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse>}
 */
const methodDescriptor_GatewayAPI_GenerateAppPassword = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GenerateAppPassword',
  grpc.web.MethodType.UNARY,
  proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest,
  proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse,
  /**
   * @param {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.generateAppPassword =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GenerateAppPassword',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GenerateAppPassword,
      callback);
};


/**
 * @param {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.generateAppPassword =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GenerateAppPassword',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GenerateAppPassword);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest,
 *   !proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse>}
 */
const methodDescriptor_GatewayAPI_ListAppPasswords = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ListAppPasswords',
  grpc.web.MethodType.UNARY,
  proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest,
  proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse,
  /**
   * @param {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.listAppPasswords =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListAppPasswords',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListAppPasswords,
      callback);
};


/**
 * @param {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.listAppPasswords =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListAppPasswords',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListAppPasswords);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest,
 *   !proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse>}
 */
const methodDescriptor_GatewayAPI_InvalidateAppPassword = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/InvalidateAppPassword',
  grpc.web.MethodType.UNARY,
  proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest,
  proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse,
  /**
   * @param {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.invalidateAppPassword =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/InvalidateAppPassword',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_InvalidateAppPassword,
      callback);
};


/**
 * @param {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.invalidateAppPassword =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/InvalidateAppPassword',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_InvalidateAppPassword);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest,
 *   !proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse>}
 */
const methodDescriptor_GatewayAPI_GetAppPassword = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetAppPassword',
  grpc.web.MethodType.UNARY,
  proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest,
  proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse,
  /**
   * @param {!proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getAppPassword =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetAppPassword',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetAppPassword,
      callback);
};


/**
 * @param {!proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getAppPassword =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetAppPassword',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetAppPassword);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.CreateContainerRequest,
 *   !proto.cs3.storage.provider.v1beta1.CreateContainerResponse>}
 */
const methodDescriptor_GatewayAPI_CreateContainer = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/CreateContainer',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.CreateContainerRequest,
  proto.cs3.storage.provider.v1beta1.CreateContainerResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.CreateContainerRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.CreateContainerResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.CreateContainerRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.CreateContainerResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.CreateContainerResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.createContainer =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CreateContainer',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CreateContainer,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.CreateContainerRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.CreateContainerResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.createContainer =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CreateContainer',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CreateContainer);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.TouchFileRequest,
 *   !proto.cs3.storage.provider.v1beta1.TouchFileResponse>}
 */
const methodDescriptor_GatewayAPI_TouchFile = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/TouchFile',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.TouchFileRequest,
  proto.cs3.storage.provider.v1beta1.TouchFileResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.TouchFileRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.TouchFileResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.TouchFileRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.TouchFileResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.TouchFileResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.touchFile =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/TouchFile',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_TouchFile,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.TouchFileRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.TouchFileResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.touchFile =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/TouchFile',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_TouchFile);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.DeleteRequest,
 *   !proto.cs3.storage.provider.v1beta1.DeleteResponse>}
 */
const methodDescriptor_GatewayAPI_Delete = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/Delete',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.DeleteRequest,
  proto.cs3.storage.provider.v1beta1.DeleteResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.DeleteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.DeleteResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.DeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.DeleteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.DeleteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.delete =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/Delete',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_Delete,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.DeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.DeleteResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.delete =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/Delete',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_Delete);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.GetPathRequest,
 *   !proto.cs3.storage.provider.v1beta1.GetPathResponse>}
 */
const methodDescriptor_GatewayAPI_GetPath = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetPath',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.GetPathRequest,
  proto.cs3.storage.provider.v1beta1.GetPathResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.GetPathRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.GetPathResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.GetPathRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.GetPathResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.GetPathResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getPath =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetPath',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetPath,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.GetPathRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.GetPathResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getPath =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetPath',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetPath);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.gateway.v1beta1.GetQuotaRequest,
 *   !proto.cs3.storage.provider.v1beta1.GetQuotaResponse>}
 */
const methodDescriptor_GatewayAPI_GetQuota = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetQuota',
  grpc.web.MethodType.UNARY,
  proto.cs3.gateway.v1beta1.GetQuotaRequest,
  proto.cs3.storage.provider.v1beta1.GetQuotaResponse,
  /**
   * @param {!proto.cs3.gateway.v1beta1.GetQuotaRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.GetQuotaResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.gateway.v1beta1.GetQuotaRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.GetQuotaResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.GetQuotaResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getQuota =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetQuota',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetQuota,
      callback);
};


/**
 * @param {!proto.cs3.gateway.v1beta1.GetQuotaRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.GetQuotaResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getQuota =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetQuota',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetQuota);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.InitiateFileDownloadRequest,
 *   !proto.cs3.gateway.v1beta1.InitiateFileDownloadResponse>}
 */
const methodDescriptor_GatewayAPI_InitiateFileDownload = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/InitiateFileDownload',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.InitiateFileDownloadRequest,
  proto.cs3.gateway.v1beta1.InitiateFileDownloadResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.InitiateFileDownloadRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.gateway.v1beta1.InitiateFileDownloadResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.InitiateFileDownloadRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.gateway.v1beta1.InitiateFileDownloadResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.gateway.v1beta1.InitiateFileDownloadResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.initiateFileDownload =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/InitiateFileDownload',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_InitiateFileDownload,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.InitiateFileDownloadRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.gateway.v1beta1.InitiateFileDownloadResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.initiateFileDownload =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/InitiateFileDownload',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_InitiateFileDownload);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.InitiateFileUploadRequest,
 *   !proto.cs3.gateway.v1beta1.InitiateFileUploadResponse>}
 */
const methodDescriptor_GatewayAPI_InitiateFileUpload = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/InitiateFileUpload',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.InitiateFileUploadRequest,
  proto.cs3.gateway.v1beta1.InitiateFileUploadResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.InitiateFileUploadRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.gateway.v1beta1.InitiateFileUploadResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.InitiateFileUploadRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.gateway.v1beta1.InitiateFileUploadResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.gateway.v1beta1.InitiateFileUploadResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.initiateFileUpload =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/InitiateFileUpload',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_InitiateFileUpload,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.InitiateFileUploadRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.gateway.v1beta1.InitiateFileUploadResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.initiateFileUpload =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/InitiateFileUpload',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_InitiateFileUpload);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.ListContainerStreamRequest,
 *   !proto.cs3.storage.provider.v1beta1.ListContainerStreamResponse>}
 */
const methodDescriptor_GatewayAPI_ListContainerStream = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ListContainerStream',
  grpc.web.MethodType.SERVER_STREAMING,
  proto.cs3.storage.provider.v1beta1.ListContainerStreamRequest,
  proto.cs3.storage.provider.v1beta1.ListContainerStreamResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.ListContainerStreamRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.ListContainerStreamResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.ListContainerStreamRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.ListContainerStreamResponse>}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.listContainerStream =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListContainerStream',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListContainerStream);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.ListContainerStreamRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.ListContainerStreamResponse>}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.listContainerStream =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListContainerStream',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListContainerStream);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.ListContainerRequest,
 *   !proto.cs3.storage.provider.v1beta1.ListContainerResponse>}
 */
const methodDescriptor_GatewayAPI_ListContainer = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ListContainer',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.ListContainerRequest,
  proto.cs3.storage.provider.v1beta1.ListContainerResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.ListContainerRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.ListContainerResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.ListContainerRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.ListContainerResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.ListContainerResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.listContainer =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListContainer',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListContainer,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.ListContainerRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.ListContainerResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.listContainer =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListContainer',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListContainer);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.ListFileVersionsRequest,
 *   !proto.cs3.storage.provider.v1beta1.ListFileVersionsResponse>}
 */
const methodDescriptor_GatewayAPI_ListFileVersions = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ListFileVersions',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.ListFileVersionsRequest,
  proto.cs3.storage.provider.v1beta1.ListFileVersionsResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.ListFileVersionsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.ListFileVersionsResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.ListFileVersionsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.ListFileVersionsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.ListFileVersionsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.listFileVersions =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListFileVersions',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListFileVersions,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.ListFileVersionsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.ListFileVersionsResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.listFileVersions =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListFileVersions',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListFileVersions);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.ListRecycleStreamRequest,
 *   !proto.cs3.storage.provider.v1beta1.ListRecycleStreamResponse>}
 */
const methodDescriptor_GatewayAPI_ListRecycleStream = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ListRecycleStream',
  grpc.web.MethodType.SERVER_STREAMING,
  proto.cs3.storage.provider.v1beta1.ListRecycleStreamRequest,
  proto.cs3.storage.provider.v1beta1.ListRecycleStreamResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.ListRecycleStreamRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.ListRecycleStreamResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.ListRecycleStreamRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.ListRecycleStreamResponse>}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.listRecycleStream =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListRecycleStream',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListRecycleStream);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.ListRecycleStreamRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.ListRecycleStreamResponse>}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.listRecycleStream =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListRecycleStream',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListRecycleStream);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.ListRecycleRequest,
 *   !proto.cs3.storage.provider.v1beta1.ListRecycleResponse>}
 */
const methodDescriptor_GatewayAPI_ListRecycle = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ListRecycle',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.ListRecycleRequest,
  proto.cs3.storage.provider.v1beta1.ListRecycleResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.ListRecycleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.ListRecycleResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.ListRecycleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.ListRecycleResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.ListRecycleResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.listRecycle =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListRecycle',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListRecycle,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.ListRecycleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.ListRecycleResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.listRecycle =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListRecycle',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListRecycle);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.MoveRequest,
 *   !proto.cs3.storage.provider.v1beta1.MoveResponse>}
 */
const methodDescriptor_GatewayAPI_Move = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/Move',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.MoveRequest,
  proto.cs3.storage.provider.v1beta1.MoveResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.MoveRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.MoveResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.MoveRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.MoveResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.MoveResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.move =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/Move',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_Move,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.MoveRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.MoveResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.move =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/Move',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_Move);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.PurgeRecycleRequest,
 *   !proto.cs3.storage.provider.v1beta1.PurgeRecycleResponse>}
 */
const methodDescriptor_GatewayAPI_PurgeRecycle = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/PurgeRecycle',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.PurgeRecycleRequest,
  proto.cs3.storage.provider.v1beta1.PurgeRecycleResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.PurgeRecycleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.PurgeRecycleResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.PurgeRecycleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.PurgeRecycleResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.PurgeRecycleResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.purgeRecycle =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/PurgeRecycle',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_PurgeRecycle,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.PurgeRecycleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.PurgeRecycleResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.purgeRecycle =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/PurgeRecycle',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_PurgeRecycle);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.RestoreFileVersionRequest,
 *   !proto.cs3.storage.provider.v1beta1.RestoreFileVersionResponse>}
 */
const methodDescriptor_GatewayAPI_RestoreFileVersion = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/RestoreFileVersion',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.RestoreFileVersionRequest,
  proto.cs3.storage.provider.v1beta1.RestoreFileVersionResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.RestoreFileVersionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.RestoreFileVersionResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.RestoreFileVersionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.RestoreFileVersionResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.RestoreFileVersionResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.restoreFileVersion =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/RestoreFileVersion',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_RestoreFileVersion,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.RestoreFileVersionRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.RestoreFileVersionResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.restoreFileVersion =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/RestoreFileVersion',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_RestoreFileVersion);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.RestoreRecycleItemRequest,
 *   !proto.cs3.storage.provider.v1beta1.RestoreRecycleItemResponse>}
 */
const methodDescriptor_GatewayAPI_RestoreRecycleItem = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/RestoreRecycleItem',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.RestoreRecycleItemRequest,
  proto.cs3.storage.provider.v1beta1.RestoreRecycleItemResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.RestoreRecycleItemRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.RestoreRecycleItemResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.RestoreRecycleItemRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.RestoreRecycleItemResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.RestoreRecycleItemResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.restoreRecycleItem =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/RestoreRecycleItem',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_RestoreRecycleItem,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.RestoreRecycleItemRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.RestoreRecycleItemResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.restoreRecycleItem =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/RestoreRecycleItem',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_RestoreRecycleItem);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.StatRequest,
 *   !proto.cs3.storage.provider.v1beta1.StatResponse>}
 */
const methodDescriptor_GatewayAPI_Stat = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/Stat',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.StatRequest,
  proto.cs3.storage.provider.v1beta1.StatResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.StatRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.StatResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.StatRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.StatResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.StatResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.stat =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/Stat',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_Stat,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.StatRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.StatResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.stat =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/Stat',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_Stat);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.CreateSymlinkRequest,
 *   !proto.cs3.storage.provider.v1beta1.CreateSymlinkResponse>}
 */
const methodDescriptor_GatewayAPI_CreateSymlink = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/CreateSymlink',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.CreateSymlinkRequest,
  proto.cs3.storage.provider.v1beta1.CreateSymlinkResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.CreateSymlinkRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.CreateSymlinkResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.CreateSymlinkRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.CreateSymlinkResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.CreateSymlinkResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.createSymlink =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CreateSymlink',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CreateSymlink,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.CreateSymlinkRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.CreateSymlinkResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.createSymlink =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CreateSymlink',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CreateSymlink);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.SetArbitraryMetadataRequest,
 *   !proto.cs3.storage.provider.v1beta1.SetArbitraryMetadataResponse>}
 */
const methodDescriptor_GatewayAPI_SetArbitraryMetadata = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/SetArbitraryMetadata',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.SetArbitraryMetadataRequest,
  proto.cs3.storage.provider.v1beta1.SetArbitraryMetadataResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.SetArbitraryMetadataRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.SetArbitraryMetadataResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.SetArbitraryMetadataRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.SetArbitraryMetadataResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.SetArbitraryMetadataResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.setArbitraryMetadata =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/SetArbitraryMetadata',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_SetArbitraryMetadata,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.SetArbitraryMetadataRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.SetArbitraryMetadataResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.setArbitraryMetadata =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/SetArbitraryMetadata',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_SetArbitraryMetadata);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.UnsetArbitraryMetadataRequest,
 *   !proto.cs3.storage.provider.v1beta1.UnsetArbitraryMetadataResponse>}
 */
const methodDescriptor_GatewayAPI_UnsetArbitraryMetadata = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/UnsetArbitraryMetadata',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.UnsetArbitraryMetadataRequest,
  proto.cs3.storage.provider.v1beta1.UnsetArbitraryMetadataResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.UnsetArbitraryMetadataRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.UnsetArbitraryMetadataResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.UnsetArbitraryMetadataRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.UnsetArbitraryMetadataResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.UnsetArbitraryMetadataResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.unsetArbitraryMetadata =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/UnsetArbitraryMetadata',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_UnsetArbitraryMetadata,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.UnsetArbitraryMetadataRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.UnsetArbitraryMetadataResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.unsetArbitraryMetadata =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/UnsetArbitraryMetadata',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_UnsetArbitraryMetadata);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.SetLockRequest,
 *   !proto.cs3.storage.provider.v1beta1.SetLockResponse>}
 */
const methodDescriptor_GatewayAPI_SetLock = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/SetLock',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.SetLockRequest,
  proto.cs3.storage.provider.v1beta1.SetLockResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.SetLockRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.SetLockResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.SetLockRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.SetLockResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.SetLockResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.setLock =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/SetLock',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_SetLock,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.SetLockRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.SetLockResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.setLock =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/SetLock',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_SetLock);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.GetLockRequest,
 *   !proto.cs3.storage.provider.v1beta1.GetLockResponse>}
 */
const methodDescriptor_GatewayAPI_GetLock = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetLock',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.GetLockRequest,
  proto.cs3.storage.provider.v1beta1.GetLockResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.GetLockRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.GetLockResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.GetLockRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.GetLockResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.GetLockResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getLock =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetLock',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetLock,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.GetLockRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.GetLockResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getLock =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetLock',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetLock);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.RefreshLockRequest,
 *   !proto.cs3.storage.provider.v1beta1.RefreshLockResponse>}
 */
const methodDescriptor_GatewayAPI_RefreshLock = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/RefreshLock',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.RefreshLockRequest,
  proto.cs3.storage.provider.v1beta1.RefreshLockResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.RefreshLockRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.RefreshLockResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.RefreshLockRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.RefreshLockResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.RefreshLockResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.refreshLock =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/RefreshLock',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_RefreshLock,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.RefreshLockRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.RefreshLockResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.refreshLock =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/RefreshLock',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_RefreshLock);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.UnlockRequest,
 *   !proto.cs3.storage.provider.v1beta1.UnlockResponse>}
 */
const methodDescriptor_GatewayAPI_Unlock = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/Unlock',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.UnlockRequest,
  proto.cs3.storage.provider.v1beta1.UnlockResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.UnlockRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.UnlockResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.UnlockRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.UnlockResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.UnlockResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.unlock =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/Unlock',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_Unlock,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.UnlockRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.UnlockResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.unlock =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/Unlock',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_Unlock);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.CreateHomeRequest,
 *   !proto.cs3.storage.provider.v1beta1.CreateHomeResponse>}
 */
const methodDescriptor_GatewayAPI_CreateHome = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/CreateHome',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.CreateHomeRequest,
  proto.cs3.storage.provider.v1beta1.CreateHomeResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.CreateHomeRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.CreateHomeResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.CreateHomeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.CreateHomeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.CreateHomeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.createHome =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CreateHome',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CreateHome,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.CreateHomeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.CreateHomeResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.createHome =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CreateHome',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CreateHome);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.CreateStorageSpaceRequest,
 *   !proto.cs3.storage.provider.v1beta1.CreateStorageSpaceResponse>}
 */
const methodDescriptor_GatewayAPI_CreateStorageSpace = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/CreateStorageSpace',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.CreateStorageSpaceRequest,
  proto.cs3.storage.provider.v1beta1.CreateStorageSpaceResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.CreateStorageSpaceRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.CreateStorageSpaceResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.CreateStorageSpaceRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.CreateStorageSpaceResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.CreateStorageSpaceResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.createStorageSpace =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CreateStorageSpace',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CreateStorageSpace,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.CreateStorageSpaceRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.CreateStorageSpaceResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.createStorageSpace =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CreateStorageSpace',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CreateStorageSpace);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.ListStorageSpacesRequest,
 *   !proto.cs3.storage.provider.v1beta1.ListStorageSpacesResponse>}
 */
const methodDescriptor_GatewayAPI_ListStorageSpaces = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ListStorageSpaces',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.ListStorageSpacesRequest,
  proto.cs3.storage.provider.v1beta1.ListStorageSpacesResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.ListStorageSpacesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.ListStorageSpacesResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.ListStorageSpacesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.ListStorageSpacesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.ListStorageSpacesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.listStorageSpaces =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListStorageSpaces',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListStorageSpaces,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.ListStorageSpacesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.ListStorageSpacesResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.listStorageSpaces =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListStorageSpaces',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListStorageSpaces);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.UpdateStorageSpaceRequest,
 *   !proto.cs3.storage.provider.v1beta1.UpdateStorageSpaceResponse>}
 */
const methodDescriptor_GatewayAPI_UpdateStorageSpace = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/UpdateStorageSpace',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.UpdateStorageSpaceRequest,
  proto.cs3.storage.provider.v1beta1.UpdateStorageSpaceResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.UpdateStorageSpaceRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.UpdateStorageSpaceResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.UpdateStorageSpaceRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.UpdateStorageSpaceResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.UpdateStorageSpaceResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.updateStorageSpace =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/UpdateStorageSpace',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_UpdateStorageSpace,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.UpdateStorageSpaceRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.UpdateStorageSpaceResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.updateStorageSpace =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/UpdateStorageSpace',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_UpdateStorageSpace);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.DeleteStorageSpaceRequest,
 *   !proto.cs3.storage.provider.v1beta1.DeleteStorageSpaceResponse>}
 */
const methodDescriptor_GatewayAPI_DeleteStorageSpace = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/DeleteStorageSpace',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.DeleteStorageSpaceRequest,
  proto.cs3.storage.provider.v1beta1.DeleteStorageSpaceResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.DeleteStorageSpaceRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.DeleteStorageSpaceResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.DeleteStorageSpaceRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.DeleteStorageSpaceResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.DeleteStorageSpaceResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.deleteStorageSpace =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/DeleteStorageSpace',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_DeleteStorageSpace,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.DeleteStorageSpaceRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.DeleteStorageSpaceResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.deleteStorageSpace =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/DeleteStorageSpace',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_DeleteStorageSpace);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.gateway.v1beta1.OpenInAppRequest,
 *   !proto.cs3.app.provider.v1beta1.OpenInAppResponse>}
 */
const methodDescriptor_GatewayAPI_OpenInApp = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/OpenInApp',
  grpc.web.MethodType.UNARY,
  proto.cs3.gateway.v1beta1.OpenInAppRequest,
  proto.cs3.app.provider.v1beta1.OpenInAppResponse,
  /**
   * @param {!proto.cs3.gateway.v1beta1.OpenInAppRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.app.provider.v1beta1.OpenInAppResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.gateway.v1beta1.OpenInAppRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.app.provider.v1beta1.OpenInAppResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.app.provider.v1beta1.OpenInAppResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.openInApp =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/OpenInApp',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_OpenInApp,
      callback);
};


/**
 * @param {!proto.cs3.gateway.v1beta1.OpenInAppRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.app.provider.v1beta1.OpenInAppResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.openInApp =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/OpenInApp',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_OpenInApp);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.collaboration.v1beta1.CreateShareRequest,
 *   !proto.cs3.sharing.collaboration.v1beta1.CreateShareResponse>}
 */
const methodDescriptor_GatewayAPI_CreateShare = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/CreateShare',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.collaboration.v1beta1.CreateShareRequest,
  proto.cs3.sharing.collaboration.v1beta1.CreateShareResponse,
  /**
   * @param {!proto.cs3.sharing.collaboration.v1beta1.CreateShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.collaboration.v1beta1.CreateShareResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.collaboration.v1beta1.CreateShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.collaboration.v1beta1.CreateShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.collaboration.v1beta1.CreateShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.createShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CreateShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CreateShare,
      callback);
};


/**
 * @param {!proto.cs3.sharing.collaboration.v1beta1.CreateShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.collaboration.v1beta1.CreateShareResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.createShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CreateShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CreateShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.collaboration.v1beta1.RemoveShareRequest,
 *   !proto.cs3.sharing.collaboration.v1beta1.RemoveShareResponse>}
 */
const methodDescriptor_GatewayAPI_RemoveShare = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/RemoveShare',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.collaboration.v1beta1.RemoveShareRequest,
  proto.cs3.sharing.collaboration.v1beta1.RemoveShareResponse,
  /**
   * @param {!proto.cs3.sharing.collaboration.v1beta1.RemoveShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.collaboration.v1beta1.RemoveShareResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.collaboration.v1beta1.RemoveShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.collaboration.v1beta1.RemoveShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.collaboration.v1beta1.RemoveShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.removeShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/RemoveShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_RemoveShare,
      callback);
};


/**
 * @param {!proto.cs3.sharing.collaboration.v1beta1.RemoveShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.collaboration.v1beta1.RemoveShareResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.removeShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/RemoveShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_RemoveShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.collaboration.v1beta1.GetShareRequest,
 *   !proto.cs3.sharing.collaboration.v1beta1.GetShareResponse>}
 */
const methodDescriptor_GatewayAPI_GetShare = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetShare',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.collaboration.v1beta1.GetShareRequest,
  proto.cs3.sharing.collaboration.v1beta1.GetShareResponse,
  /**
   * @param {!proto.cs3.sharing.collaboration.v1beta1.GetShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.collaboration.v1beta1.GetShareResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.collaboration.v1beta1.GetShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.collaboration.v1beta1.GetShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.collaboration.v1beta1.GetShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetShare,
      callback);
};


/**
 * @param {!proto.cs3.sharing.collaboration.v1beta1.GetShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.collaboration.v1beta1.GetShareResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.collaboration.v1beta1.ListSharesRequest,
 *   !proto.cs3.sharing.collaboration.v1beta1.ListSharesResponse>}
 */
const methodDescriptor_GatewayAPI_ListShares = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ListShares',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.collaboration.v1beta1.ListSharesRequest,
  proto.cs3.sharing.collaboration.v1beta1.ListSharesResponse,
  /**
   * @param {!proto.cs3.sharing.collaboration.v1beta1.ListSharesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.collaboration.v1beta1.ListSharesResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.collaboration.v1beta1.ListSharesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.collaboration.v1beta1.ListSharesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.collaboration.v1beta1.ListSharesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.listShares =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListShares',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListShares,
      callback);
};


/**
 * @param {!proto.cs3.sharing.collaboration.v1beta1.ListSharesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.collaboration.v1beta1.ListSharesResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.listShares =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListShares',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListShares);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest,
 *   !proto.cs3.sharing.collaboration.v1beta1.UpdateShareResponse>}
 */
const methodDescriptor_GatewayAPI_UpdateShare = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/UpdateShare',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest,
  proto.cs3.sharing.collaboration.v1beta1.UpdateShareResponse,
  /**
   * @param {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.collaboration.v1beta1.UpdateShareResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.collaboration.v1beta1.UpdateShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.collaboration.v1beta1.UpdateShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.updateShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/UpdateShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_UpdateShare,
      callback);
};


/**
 * @param {!proto.cs3.sharing.collaboration.v1beta1.UpdateShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.collaboration.v1beta1.UpdateShareResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.updateShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/UpdateShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_UpdateShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.collaboration.v1beta1.ListReceivedSharesRequest,
 *   !proto.cs3.sharing.collaboration.v1beta1.ListReceivedSharesResponse>}
 */
const methodDescriptor_GatewayAPI_ListReceivedShares = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ListReceivedShares',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.collaboration.v1beta1.ListReceivedSharesRequest,
  proto.cs3.sharing.collaboration.v1beta1.ListReceivedSharesResponse,
  /**
   * @param {!proto.cs3.sharing.collaboration.v1beta1.ListReceivedSharesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.collaboration.v1beta1.ListReceivedSharesResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.collaboration.v1beta1.ListReceivedSharesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.collaboration.v1beta1.ListReceivedSharesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.collaboration.v1beta1.ListReceivedSharesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.listReceivedShares =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListReceivedShares',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListReceivedShares,
      callback);
};


/**
 * @param {!proto.cs3.sharing.collaboration.v1beta1.ListReceivedSharesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.collaboration.v1beta1.ListReceivedSharesResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.listReceivedShares =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListReceivedShares',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListReceivedShares);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.collaboration.v1beta1.ListReceivedSharesRequest,
 *   !proto.cs3.gateway.v1beta1.ListExistingReceivedSharesResponse>}
 */
const methodDescriptor_GatewayAPI_ListExistingReceivedShares = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ListExistingReceivedShares',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.collaboration.v1beta1.ListReceivedSharesRequest,
  proto.cs3.gateway.v1beta1.ListExistingReceivedSharesResponse,
  /**
   * @param {!proto.cs3.sharing.collaboration.v1beta1.ListReceivedSharesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.gateway.v1beta1.ListExistingReceivedSharesResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.collaboration.v1beta1.ListReceivedSharesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.gateway.v1beta1.ListExistingReceivedSharesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.gateway.v1beta1.ListExistingReceivedSharesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.listExistingReceivedShares =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListExistingReceivedShares',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListExistingReceivedShares,
      callback);
};


/**
 * @param {!proto.cs3.sharing.collaboration.v1beta1.ListReceivedSharesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.gateway.v1beta1.ListExistingReceivedSharesResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.listExistingReceivedShares =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListExistingReceivedShares',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListExistingReceivedShares);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.collaboration.v1beta1.UpdateReceivedShareRequest,
 *   !proto.cs3.sharing.collaboration.v1beta1.UpdateReceivedShareResponse>}
 */
const methodDescriptor_GatewayAPI_UpdateReceivedShare = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/UpdateReceivedShare',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.collaboration.v1beta1.UpdateReceivedShareRequest,
  proto.cs3.sharing.collaboration.v1beta1.UpdateReceivedShareResponse,
  /**
   * @param {!proto.cs3.sharing.collaboration.v1beta1.UpdateReceivedShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.collaboration.v1beta1.UpdateReceivedShareResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.collaboration.v1beta1.UpdateReceivedShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.collaboration.v1beta1.UpdateReceivedShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.collaboration.v1beta1.UpdateReceivedShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.updateReceivedShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/UpdateReceivedShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_UpdateReceivedShare,
      callback);
};


/**
 * @param {!proto.cs3.sharing.collaboration.v1beta1.UpdateReceivedShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.collaboration.v1beta1.UpdateReceivedShareResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.updateReceivedShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/UpdateReceivedShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_UpdateReceivedShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.collaboration.v1beta1.GetReceivedShareRequest,
 *   !proto.cs3.sharing.collaboration.v1beta1.GetReceivedShareResponse>}
 */
const methodDescriptor_GatewayAPI_GetReceivedShare = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetReceivedShare',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.collaboration.v1beta1.GetReceivedShareRequest,
  proto.cs3.sharing.collaboration.v1beta1.GetReceivedShareResponse,
  /**
   * @param {!proto.cs3.sharing.collaboration.v1beta1.GetReceivedShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.collaboration.v1beta1.GetReceivedShareResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.collaboration.v1beta1.GetReceivedShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.collaboration.v1beta1.GetReceivedShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.collaboration.v1beta1.GetReceivedShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getReceivedShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetReceivedShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetReceivedShare,
      callback);
};


/**
 * @param {!proto.cs3.sharing.collaboration.v1beta1.GetReceivedShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.collaboration.v1beta1.GetReceivedShareResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getReceivedShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetReceivedShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetReceivedShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.preferences.v1beta1.SetKeyRequest,
 *   !proto.cs3.preferences.v1beta1.SetKeyResponse>}
 */
const methodDescriptor_GatewayAPI_SetKey = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/SetKey',
  grpc.web.MethodType.UNARY,
  proto.cs3.preferences.v1beta1.SetKeyRequest,
  proto.cs3.preferences.v1beta1.SetKeyResponse,
  /**
   * @param {!proto.cs3.preferences.v1beta1.SetKeyRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.preferences.v1beta1.SetKeyResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.preferences.v1beta1.SetKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.preferences.v1beta1.SetKeyResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.preferences.v1beta1.SetKeyResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.setKey =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/SetKey',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_SetKey,
      callback);
};


/**
 * @param {!proto.cs3.preferences.v1beta1.SetKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.preferences.v1beta1.SetKeyResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.setKey =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/SetKey',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_SetKey);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.preferences.v1beta1.GetKeyRequest,
 *   !proto.cs3.preferences.v1beta1.GetKeyResponse>}
 */
const methodDescriptor_GatewayAPI_GetKey = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetKey',
  grpc.web.MethodType.UNARY,
  proto.cs3.preferences.v1beta1.GetKeyRequest,
  proto.cs3.preferences.v1beta1.GetKeyResponse,
  /**
   * @param {!proto.cs3.preferences.v1beta1.GetKeyRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.preferences.v1beta1.GetKeyResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.preferences.v1beta1.GetKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.preferences.v1beta1.GetKeyResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.preferences.v1beta1.GetKeyResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getKey =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetKey',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetKey,
      callback);
};


/**
 * @param {!proto.cs3.preferences.v1beta1.GetKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.preferences.v1beta1.GetKeyResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getKey =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetKey',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetKey);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.link.v1beta1.CreatePublicShareRequest,
 *   !proto.cs3.sharing.link.v1beta1.CreatePublicShareResponse>}
 */
const methodDescriptor_GatewayAPI_CreatePublicShare = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/CreatePublicShare',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.link.v1beta1.CreatePublicShareRequest,
  proto.cs3.sharing.link.v1beta1.CreatePublicShareResponse,
  /**
   * @param {!proto.cs3.sharing.link.v1beta1.CreatePublicShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.link.v1beta1.CreatePublicShareResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.link.v1beta1.CreatePublicShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.link.v1beta1.CreatePublicShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.link.v1beta1.CreatePublicShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.createPublicShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CreatePublicShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CreatePublicShare,
      callback);
};


/**
 * @param {!proto.cs3.sharing.link.v1beta1.CreatePublicShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.link.v1beta1.CreatePublicShareResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.createPublicShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CreatePublicShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CreatePublicShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.link.v1beta1.RemovePublicShareRequest,
 *   !proto.cs3.sharing.link.v1beta1.RemovePublicShareResponse>}
 */
const methodDescriptor_GatewayAPI_RemovePublicShare = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/RemovePublicShare',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.link.v1beta1.RemovePublicShareRequest,
  proto.cs3.sharing.link.v1beta1.RemovePublicShareResponse,
  /**
   * @param {!proto.cs3.sharing.link.v1beta1.RemovePublicShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.link.v1beta1.RemovePublicShareResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.link.v1beta1.RemovePublicShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.link.v1beta1.RemovePublicShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.link.v1beta1.RemovePublicShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.removePublicShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/RemovePublicShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_RemovePublicShare,
      callback);
};


/**
 * @param {!proto.cs3.sharing.link.v1beta1.RemovePublicShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.link.v1beta1.RemovePublicShareResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.removePublicShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/RemovePublicShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_RemovePublicShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.link.v1beta1.GetPublicShareRequest,
 *   !proto.cs3.sharing.link.v1beta1.GetPublicShareResponse>}
 */
const methodDescriptor_GatewayAPI_GetPublicShare = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetPublicShare',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.link.v1beta1.GetPublicShareRequest,
  proto.cs3.sharing.link.v1beta1.GetPublicShareResponse,
  /**
   * @param {!proto.cs3.sharing.link.v1beta1.GetPublicShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.link.v1beta1.GetPublicShareResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.link.v1beta1.GetPublicShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.link.v1beta1.GetPublicShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.link.v1beta1.GetPublicShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getPublicShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetPublicShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetPublicShare,
      callback);
};


/**
 * @param {!proto.cs3.sharing.link.v1beta1.GetPublicShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.link.v1beta1.GetPublicShareResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getPublicShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetPublicShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetPublicShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.link.v1beta1.GetPublicShareByTokenRequest,
 *   !proto.cs3.sharing.link.v1beta1.GetPublicShareByTokenResponse>}
 */
const methodDescriptor_GatewayAPI_GetPublicShareByToken = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetPublicShareByToken',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.link.v1beta1.GetPublicShareByTokenRequest,
  proto.cs3.sharing.link.v1beta1.GetPublicShareByTokenResponse,
  /**
   * @param {!proto.cs3.sharing.link.v1beta1.GetPublicShareByTokenRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.link.v1beta1.GetPublicShareByTokenResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.link.v1beta1.GetPublicShareByTokenRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.link.v1beta1.GetPublicShareByTokenResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.link.v1beta1.GetPublicShareByTokenResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getPublicShareByToken =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetPublicShareByToken',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetPublicShareByToken,
      callback);
};


/**
 * @param {!proto.cs3.sharing.link.v1beta1.GetPublicShareByTokenRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.link.v1beta1.GetPublicShareByTokenResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getPublicShareByToken =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetPublicShareByToken',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetPublicShareByToken);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.link.v1beta1.ListPublicSharesRequest,
 *   !proto.cs3.sharing.link.v1beta1.ListPublicSharesResponse>}
 */
const methodDescriptor_GatewayAPI_ListPublicShares = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ListPublicShares',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.link.v1beta1.ListPublicSharesRequest,
  proto.cs3.sharing.link.v1beta1.ListPublicSharesResponse,
  /**
   * @param {!proto.cs3.sharing.link.v1beta1.ListPublicSharesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.link.v1beta1.ListPublicSharesResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.link.v1beta1.ListPublicSharesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.link.v1beta1.ListPublicSharesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.link.v1beta1.ListPublicSharesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.listPublicShares =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListPublicShares',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListPublicShares,
      callback);
};


/**
 * @param {!proto.cs3.sharing.link.v1beta1.ListPublicSharesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.link.v1beta1.ListPublicSharesResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.listPublicShares =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListPublicShares',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListPublicShares);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.link.v1beta1.UpdatePublicShareRequest,
 *   !proto.cs3.sharing.link.v1beta1.UpdatePublicShareResponse>}
 */
const methodDescriptor_GatewayAPI_UpdatePublicShare = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/UpdatePublicShare',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.link.v1beta1.UpdatePublicShareRequest,
  proto.cs3.sharing.link.v1beta1.UpdatePublicShareResponse,
  /**
   * @param {!proto.cs3.sharing.link.v1beta1.UpdatePublicShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.link.v1beta1.UpdatePublicShareResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.link.v1beta1.UpdatePublicShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.link.v1beta1.UpdatePublicShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.link.v1beta1.UpdatePublicShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.updatePublicShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/UpdatePublicShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_UpdatePublicShare,
      callback);
};


/**
 * @param {!proto.cs3.sharing.link.v1beta1.UpdatePublicShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.link.v1beta1.UpdatePublicShareResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.updatePublicShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/UpdatePublicShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_UpdatePublicShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.ocm.v1beta1.CreateOCMShareRequest,
 *   !proto.cs3.sharing.ocm.v1beta1.CreateOCMShareResponse>}
 */
const methodDescriptor_GatewayAPI_CreateOCMShare = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/CreateOCMShare',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.ocm.v1beta1.CreateOCMShareRequest,
  proto.cs3.sharing.ocm.v1beta1.CreateOCMShareResponse,
  /**
   * @param {!proto.cs3.sharing.ocm.v1beta1.CreateOCMShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.ocm.v1beta1.CreateOCMShareResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.CreateOCMShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.ocm.v1beta1.CreateOCMShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.ocm.v1beta1.CreateOCMShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.createOCMShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CreateOCMShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CreateOCMShare,
      callback);
};


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.CreateOCMShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.ocm.v1beta1.CreateOCMShareResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.createOCMShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CreateOCMShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CreateOCMShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.ocm.v1beta1.RemoveOCMShareRequest,
 *   !proto.cs3.sharing.ocm.v1beta1.RemoveOCMShareResponse>}
 */
const methodDescriptor_GatewayAPI_RemoveOCMShare = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/RemoveOCMShare',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.ocm.v1beta1.RemoveOCMShareRequest,
  proto.cs3.sharing.ocm.v1beta1.RemoveOCMShareResponse,
  /**
   * @param {!proto.cs3.sharing.ocm.v1beta1.RemoveOCMShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.ocm.v1beta1.RemoveOCMShareResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.RemoveOCMShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.ocm.v1beta1.RemoveOCMShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.ocm.v1beta1.RemoveOCMShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.removeOCMShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/RemoveOCMShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_RemoveOCMShare,
      callback);
};


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.RemoveOCMShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.ocm.v1beta1.RemoveOCMShareResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.removeOCMShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/RemoveOCMShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_RemoveOCMShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.ocm.v1beta1.GetOCMShareRequest,
 *   !proto.cs3.sharing.ocm.v1beta1.GetOCMShareResponse>}
 */
const methodDescriptor_GatewayAPI_GetOCMShare = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetOCMShare',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.ocm.v1beta1.GetOCMShareRequest,
  proto.cs3.sharing.ocm.v1beta1.GetOCMShareResponse,
  /**
   * @param {!proto.cs3.sharing.ocm.v1beta1.GetOCMShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.ocm.v1beta1.GetOCMShareResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.GetOCMShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.ocm.v1beta1.GetOCMShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.ocm.v1beta1.GetOCMShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getOCMShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetOCMShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetOCMShare,
      callback);
};


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.GetOCMShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.ocm.v1beta1.GetOCMShareResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getOCMShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetOCMShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetOCMShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.ocm.v1beta1.GetOCMShareByTokenRequest,
 *   !proto.cs3.sharing.ocm.v1beta1.GetOCMShareByTokenResponse>}
 */
const methodDescriptor_GatewayAPI_GetOCMShareByToken = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetOCMShareByToken',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.ocm.v1beta1.GetOCMShareByTokenRequest,
  proto.cs3.sharing.ocm.v1beta1.GetOCMShareByTokenResponse,
  /**
   * @param {!proto.cs3.sharing.ocm.v1beta1.GetOCMShareByTokenRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.ocm.v1beta1.GetOCMShareByTokenResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.GetOCMShareByTokenRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.ocm.v1beta1.GetOCMShareByTokenResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.ocm.v1beta1.GetOCMShareByTokenResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getOCMShareByToken =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetOCMShareByToken',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetOCMShareByToken,
      callback);
};


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.GetOCMShareByTokenRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.ocm.v1beta1.GetOCMShareByTokenResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getOCMShareByToken =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetOCMShareByToken',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetOCMShareByToken);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.ocm.v1beta1.ListOCMSharesRequest,
 *   !proto.cs3.sharing.ocm.v1beta1.ListOCMSharesResponse>}
 */
const methodDescriptor_GatewayAPI_ListOCMShares = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ListOCMShares',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.ocm.v1beta1.ListOCMSharesRequest,
  proto.cs3.sharing.ocm.v1beta1.ListOCMSharesResponse,
  /**
   * @param {!proto.cs3.sharing.ocm.v1beta1.ListOCMSharesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.ocm.v1beta1.ListOCMSharesResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.ListOCMSharesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.ocm.v1beta1.ListOCMSharesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.ocm.v1beta1.ListOCMSharesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.listOCMShares =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListOCMShares',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListOCMShares,
      callback);
};


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.ListOCMSharesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.ocm.v1beta1.ListOCMSharesResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.listOCMShares =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListOCMShares',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListOCMShares);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.ocm.v1beta1.UpdateOCMShareRequest,
 *   !proto.cs3.sharing.ocm.v1beta1.UpdateOCMShareResponse>}
 */
const methodDescriptor_GatewayAPI_UpdateOCMShare = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/UpdateOCMShare',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.ocm.v1beta1.UpdateOCMShareRequest,
  proto.cs3.sharing.ocm.v1beta1.UpdateOCMShareResponse,
  /**
   * @param {!proto.cs3.sharing.ocm.v1beta1.UpdateOCMShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.ocm.v1beta1.UpdateOCMShareResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.UpdateOCMShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.ocm.v1beta1.UpdateOCMShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.ocm.v1beta1.UpdateOCMShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.updateOCMShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/UpdateOCMShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_UpdateOCMShare,
      callback);
};


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.UpdateOCMShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.ocm.v1beta1.UpdateOCMShareResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.updateOCMShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/UpdateOCMShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_UpdateOCMShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesRequest,
 *   !proto.cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesResponse>}
 */
const methodDescriptor_GatewayAPI_ListReceivedOCMShares = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ListReceivedOCMShares',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesRequest,
  proto.cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesResponse,
  /**
   * @param {!proto.cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.listReceivedOCMShares =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListReceivedOCMShares',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListReceivedOCMShares,
      callback);
};


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.listReceivedOCMShares =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListReceivedOCMShares',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListReceivedOCMShares);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareRequest,
 *   !proto.cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareResponse>}
 */
const methodDescriptor_GatewayAPI_UpdateReceivedOCMShare = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/UpdateReceivedOCMShare',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareRequest,
  proto.cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareResponse,
  /**
   * @param {!proto.cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.updateReceivedOCMShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/UpdateReceivedOCMShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_UpdateReceivedOCMShare,
      callback);
};


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.updateReceivedOCMShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/UpdateReceivedOCMShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_UpdateReceivedOCMShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.sharing.ocm.v1beta1.GetReceivedOCMShareRequest,
 *   !proto.cs3.sharing.ocm.v1beta1.GetReceivedOCMShareResponse>}
 */
const methodDescriptor_GatewayAPI_GetReceivedOCMShare = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetReceivedOCMShare',
  grpc.web.MethodType.UNARY,
  proto.cs3.sharing.ocm.v1beta1.GetReceivedOCMShareRequest,
  proto.cs3.sharing.ocm.v1beta1.GetReceivedOCMShareResponse,
  /**
   * @param {!proto.cs3.sharing.ocm.v1beta1.GetReceivedOCMShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.sharing.ocm.v1beta1.GetReceivedOCMShareResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.GetReceivedOCMShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.sharing.ocm.v1beta1.GetReceivedOCMShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.sharing.ocm.v1beta1.GetReceivedOCMShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getReceivedOCMShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetReceivedOCMShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetReceivedOCMShare,
      callback);
};


/**
 * @param {!proto.cs3.sharing.ocm.v1beta1.GetReceivedOCMShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.sharing.ocm.v1beta1.GetReceivedOCMShareResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getReceivedOCMShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetReceivedOCMShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetReceivedOCMShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.app.registry.v1beta1.GetAppProvidersRequest,
 *   !proto.cs3.app.registry.v1beta1.GetAppProvidersResponse>}
 */
const methodDescriptor_GatewayAPI_GetAppProviders = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetAppProviders',
  grpc.web.MethodType.UNARY,
  proto.cs3.app.registry.v1beta1.GetAppProvidersRequest,
  proto.cs3.app.registry.v1beta1.GetAppProvidersResponse,
  /**
   * @param {!proto.cs3.app.registry.v1beta1.GetAppProvidersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.app.registry.v1beta1.GetAppProvidersResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.app.registry.v1beta1.GetAppProvidersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.app.registry.v1beta1.GetAppProvidersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.app.registry.v1beta1.GetAppProvidersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getAppProviders =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetAppProviders',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetAppProviders,
      callback);
};


/**
 * @param {!proto.cs3.app.registry.v1beta1.GetAppProvidersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.app.registry.v1beta1.GetAppProvidersResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getAppProviders =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetAppProviders',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetAppProviders);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.app.registry.v1beta1.AddAppProviderRequest,
 *   !proto.cs3.app.registry.v1beta1.AddAppProviderResponse>}
 */
const methodDescriptor_GatewayAPI_AddAppProvider = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/AddAppProvider',
  grpc.web.MethodType.UNARY,
  proto.cs3.app.registry.v1beta1.AddAppProviderRequest,
  proto.cs3.app.registry.v1beta1.AddAppProviderResponse,
  /**
   * @param {!proto.cs3.app.registry.v1beta1.AddAppProviderRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.app.registry.v1beta1.AddAppProviderResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.app.registry.v1beta1.AddAppProviderRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.app.registry.v1beta1.AddAppProviderResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.app.registry.v1beta1.AddAppProviderResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.addAppProvider =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/AddAppProvider',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_AddAppProvider,
      callback);
};


/**
 * @param {!proto.cs3.app.registry.v1beta1.AddAppProviderRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.app.registry.v1beta1.AddAppProviderResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.addAppProvider =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/AddAppProvider',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_AddAppProvider);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.app.registry.v1beta1.ListAppProvidersRequest,
 *   !proto.cs3.app.registry.v1beta1.ListAppProvidersResponse>}
 */
const methodDescriptor_GatewayAPI_ListAppProviders = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ListAppProviders',
  grpc.web.MethodType.UNARY,
  proto.cs3.app.registry.v1beta1.ListAppProvidersRequest,
  proto.cs3.app.registry.v1beta1.ListAppProvidersResponse,
  /**
   * @param {!proto.cs3.app.registry.v1beta1.ListAppProvidersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.app.registry.v1beta1.ListAppProvidersResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.app.registry.v1beta1.ListAppProvidersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.app.registry.v1beta1.ListAppProvidersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.app.registry.v1beta1.ListAppProvidersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.listAppProviders =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListAppProviders',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListAppProviders,
      callback);
};


/**
 * @param {!proto.cs3.app.registry.v1beta1.ListAppProvidersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.app.registry.v1beta1.ListAppProvidersResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.listAppProviders =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListAppProviders',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListAppProviders);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.app.registry.v1beta1.ListSupportedMimeTypesRequest,
 *   !proto.cs3.app.registry.v1beta1.ListSupportedMimeTypesResponse>}
 */
const methodDescriptor_GatewayAPI_ListSupportedMimeTypes = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ListSupportedMimeTypes',
  grpc.web.MethodType.UNARY,
  proto.cs3.app.registry.v1beta1.ListSupportedMimeTypesRequest,
  proto.cs3.app.registry.v1beta1.ListSupportedMimeTypesResponse,
  /**
   * @param {!proto.cs3.app.registry.v1beta1.ListSupportedMimeTypesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.app.registry.v1beta1.ListSupportedMimeTypesResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.app.registry.v1beta1.ListSupportedMimeTypesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.app.registry.v1beta1.ListSupportedMimeTypesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.app.registry.v1beta1.ListSupportedMimeTypesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.listSupportedMimeTypes =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListSupportedMimeTypes',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListSupportedMimeTypes,
      callback);
};


/**
 * @param {!proto.cs3.app.registry.v1beta1.ListSupportedMimeTypesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.app.registry.v1beta1.ListSupportedMimeTypesResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.listSupportedMimeTypes =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListSupportedMimeTypes',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListSupportedMimeTypes);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.app.registry.v1beta1.GetDefaultAppProviderForMimeTypeRequest,
 *   !proto.cs3.app.registry.v1beta1.GetDefaultAppProviderForMimeTypeResponse>}
 */
const methodDescriptor_GatewayAPI_GetDefaultAppProviderForMimeType = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetDefaultAppProviderForMimeType',
  grpc.web.MethodType.UNARY,
  proto.cs3.app.registry.v1beta1.GetDefaultAppProviderForMimeTypeRequest,
  proto.cs3.app.registry.v1beta1.GetDefaultAppProviderForMimeTypeResponse,
  /**
   * @param {!proto.cs3.app.registry.v1beta1.GetDefaultAppProviderForMimeTypeRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.app.registry.v1beta1.GetDefaultAppProviderForMimeTypeResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.app.registry.v1beta1.GetDefaultAppProviderForMimeTypeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.app.registry.v1beta1.GetDefaultAppProviderForMimeTypeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.app.registry.v1beta1.GetDefaultAppProviderForMimeTypeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getDefaultAppProviderForMimeType =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetDefaultAppProviderForMimeType',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetDefaultAppProviderForMimeType,
      callback);
};


/**
 * @param {!proto.cs3.app.registry.v1beta1.GetDefaultAppProviderForMimeTypeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.app.registry.v1beta1.GetDefaultAppProviderForMimeTypeResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getDefaultAppProviderForMimeType =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetDefaultAppProviderForMimeType',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetDefaultAppProviderForMimeType);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.app.registry.v1beta1.SetDefaultAppProviderForMimeTypeRequest,
 *   !proto.cs3.app.registry.v1beta1.SetDefaultAppProviderForMimeTypeResponse>}
 */
const methodDescriptor_GatewayAPI_SetDefaultAppProviderForMimeType = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/SetDefaultAppProviderForMimeType',
  grpc.web.MethodType.UNARY,
  proto.cs3.app.registry.v1beta1.SetDefaultAppProviderForMimeTypeRequest,
  proto.cs3.app.registry.v1beta1.SetDefaultAppProviderForMimeTypeResponse,
  /**
   * @param {!proto.cs3.app.registry.v1beta1.SetDefaultAppProviderForMimeTypeRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.app.registry.v1beta1.SetDefaultAppProviderForMimeTypeResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.app.registry.v1beta1.SetDefaultAppProviderForMimeTypeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.app.registry.v1beta1.SetDefaultAppProviderForMimeTypeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.app.registry.v1beta1.SetDefaultAppProviderForMimeTypeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.setDefaultAppProviderForMimeType =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/SetDefaultAppProviderForMimeType',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_SetDefaultAppProviderForMimeType,
      callback);
};


/**
 * @param {!proto.cs3.app.registry.v1beta1.SetDefaultAppProviderForMimeTypeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.app.registry.v1beta1.SetDefaultAppProviderForMimeTypeResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.setDefaultAppProviderForMimeType =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/SetDefaultAppProviderForMimeType',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_SetDefaultAppProviderForMimeType);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.identity.user.v1beta1.GetUserRequest,
 *   !proto.cs3.identity.user.v1beta1.GetUserResponse>}
 */
const methodDescriptor_GatewayAPI_GetUser = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetUser',
  grpc.web.MethodType.UNARY,
  proto.cs3.identity.user.v1beta1.GetUserRequest,
  proto.cs3.identity.user.v1beta1.GetUserResponse,
  /**
   * @param {!proto.cs3.identity.user.v1beta1.GetUserRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.identity.user.v1beta1.GetUserResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.identity.user.v1beta1.GetUserRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.identity.user.v1beta1.GetUserResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.identity.user.v1beta1.GetUserResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetUser',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetUser,
      callback);
};


/**
 * @param {!proto.cs3.identity.user.v1beta1.GetUserRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.identity.user.v1beta1.GetUserResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetUser',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.identity.user.v1beta1.GetUserByClaimRequest,
 *   !proto.cs3.identity.user.v1beta1.GetUserByClaimResponse>}
 */
const methodDescriptor_GatewayAPI_GetUserByClaim = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetUserByClaim',
  grpc.web.MethodType.UNARY,
  proto.cs3.identity.user.v1beta1.GetUserByClaimRequest,
  proto.cs3.identity.user.v1beta1.GetUserByClaimResponse,
  /**
   * @param {!proto.cs3.identity.user.v1beta1.GetUserByClaimRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.identity.user.v1beta1.GetUserByClaimResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.identity.user.v1beta1.GetUserByClaimRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.identity.user.v1beta1.GetUserByClaimResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.identity.user.v1beta1.GetUserByClaimResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getUserByClaim =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetUserByClaim',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetUserByClaim,
      callback);
};


/**
 * @param {!proto.cs3.identity.user.v1beta1.GetUserByClaimRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.identity.user.v1beta1.GetUserByClaimResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getUserByClaim =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetUserByClaim',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetUserByClaim);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.identity.user.v1beta1.GetUserGroupsRequest,
 *   !proto.cs3.identity.user.v1beta1.GetUserGroupsResponse>}
 */
const methodDescriptor_GatewayAPI_GetUserGroups = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetUserGroups',
  grpc.web.MethodType.UNARY,
  proto.cs3.identity.user.v1beta1.GetUserGroupsRequest,
  proto.cs3.identity.user.v1beta1.GetUserGroupsResponse,
  /**
   * @param {!proto.cs3.identity.user.v1beta1.GetUserGroupsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.identity.user.v1beta1.GetUserGroupsResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.identity.user.v1beta1.GetUserGroupsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.identity.user.v1beta1.GetUserGroupsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.identity.user.v1beta1.GetUserGroupsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getUserGroups =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetUserGroups',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetUserGroups,
      callback);
};


/**
 * @param {!proto.cs3.identity.user.v1beta1.GetUserGroupsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.identity.user.v1beta1.GetUserGroupsResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getUserGroups =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetUserGroups',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetUserGroups);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.identity.user.v1beta1.FindUsersRequest,
 *   !proto.cs3.identity.user.v1beta1.FindUsersResponse>}
 */
const methodDescriptor_GatewayAPI_FindUsers = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/FindUsers',
  grpc.web.MethodType.UNARY,
  proto.cs3.identity.user.v1beta1.FindUsersRequest,
  proto.cs3.identity.user.v1beta1.FindUsersResponse,
  /**
   * @param {!proto.cs3.identity.user.v1beta1.FindUsersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.identity.user.v1beta1.FindUsersResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.identity.user.v1beta1.FindUsersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.identity.user.v1beta1.FindUsersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.identity.user.v1beta1.FindUsersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.findUsers =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/FindUsers',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_FindUsers,
      callback);
};


/**
 * @param {!proto.cs3.identity.user.v1beta1.FindUsersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.identity.user.v1beta1.FindUsersResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.findUsers =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/FindUsers',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_FindUsers);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.identity.group.v1beta1.GetGroupRequest,
 *   !proto.cs3.identity.group.v1beta1.GetGroupResponse>}
 */
const methodDescriptor_GatewayAPI_GetGroup = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetGroup',
  grpc.web.MethodType.UNARY,
  proto.cs3.identity.group.v1beta1.GetGroupRequest,
  proto.cs3.identity.group.v1beta1.GetGroupResponse,
  /**
   * @param {!proto.cs3.identity.group.v1beta1.GetGroupRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.identity.group.v1beta1.GetGroupResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.identity.group.v1beta1.GetGroupRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.identity.group.v1beta1.GetGroupResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.identity.group.v1beta1.GetGroupResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getGroup =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetGroup',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetGroup,
      callback);
};


/**
 * @param {!proto.cs3.identity.group.v1beta1.GetGroupRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.identity.group.v1beta1.GetGroupResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getGroup =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetGroup',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetGroup);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.identity.group.v1beta1.GetGroupByClaimRequest,
 *   !proto.cs3.identity.group.v1beta1.GetGroupByClaimResponse>}
 */
const methodDescriptor_GatewayAPI_GetGroupByClaim = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetGroupByClaim',
  grpc.web.MethodType.UNARY,
  proto.cs3.identity.group.v1beta1.GetGroupByClaimRequest,
  proto.cs3.identity.group.v1beta1.GetGroupByClaimResponse,
  /**
   * @param {!proto.cs3.identity.group.v1beta1.GetGroupByClaimRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.identity.group.v1beta1.GetGroupByClaimResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.identity.group.v1beta1.GetGroupByClaimRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.identity.group.v1beta1.GetGroupByClaimResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.identity.group.v1beta1.GetGroupByClaimResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getGroupByClaim =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetGroupByClaim',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetGroupByClaim,
      callback);
};


/**
 * @param {!proto.cs3.identity.group.v1beta1.GetGroupByClaimRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.identity.group.v1beta1.GetGroupByClaimResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getGroupByClaim =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetGroupByClaim',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetGroupByClaim);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.identity.group.v1beta1.GetMembersRequest,
 *   !proto.cs3.identity.group.v1beta1.GetMembersResponse>}
 */
const methodDescriptor_GatewayAPI_GetMembers = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetMembers',
  grpc.web.MethodType.UNARY,
  proto.cs3.identity.group.v1beta1.GetMembersRequest,
  proto.cs3.identity.group.v1beta1.GetMembersResponse,
  /**
   * @param {!proto.cs3.identity.group.v1beta1.GetMembersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.identity.group.v1beta1.GetMembersResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.identity.group.v1beta1.GetMembersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.identity.group.v1beta1.GetMembersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.identity.group.v1beta1.GetMembersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getMembers =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetMembers',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetMembers,
      callback);
};


/**
 * @param {!proto.cs3.identity.group.v1beta1.GetMembersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.identity.group.v1beta1.GetMembersResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getMembers =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetMembers',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetMembers);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.identity.group.v1beta1.HasMemberRequest,
 *   !proto.cs3.identity.group.v1beta1.HasMemberResponse>}
 */
const methodDescriptor_GatewayAPI_HasMember = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/HasMember',
  grpc.web.MethodType.UNARY,
  proto.cs3.identity.group.v1beta1.HasMemberRequest,
  proto.cs3.identity.group.v1beta1.HasMemberResponse,
  /**
   * @param {!proto.cs3.identity.group.v1beta1.HasMemberRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.identity.group.v1beta1.HasMemberResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.identity.group.v1beta1.HasMemberRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.identity.group.v1beta1.HasMemberResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.identity.group.v1beta1.HasMemberResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.hasMember =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/HasMember',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_HasMember,
      callback);
};


/**
 * @param {!proto.cs3.identity.group.v1beta1.HasMemberRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.identity.group.v1beta1.HasMemberResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.hasMember =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/HasMember',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_HasMember);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.identity.group.v1beta1.FindGroupsRequest,
 *   !proto.cs3.identity.group.v1beta1.FindGroupsResponse>}
 */
const methodDescriptor_GatewayAPI_FindGroups = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/FindGroups',
  grpc.web.MethodType.UNARY,
  proto.cs3.identity.group.v1beta1.FindGroupsRequest,
  proto.cs3.identity.group.v1beta1.FindGroupsResponse,
  /**
   * @param {!proto.cs3.identity.group.v1beta1.FindGroupsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.identity.group.v1beta1.FindGroupsResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.identity.group.v1beta1.FindGroupsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.identity.group.v1beta1.FindGroupsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.identity.group.v1beta1.FindGroupsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.findGroups =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/FindGroups',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_FindGroups,
      callback);
};


/**
 * @param {!proto.cs3.identity.group.v1beta1.FindGroupsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.identity.group.v1beta1.FindGroupsResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.findGroups =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/FindGroups',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_FindGroups);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.auth.registry.v1beta1.ListAuthProvidersRequest,
 *   !proto.cs3.gateway.v1beta1.ListAuthProvidersResponse>}
 */
const methodDescriptor_GatewayAPI_ListAuthProviders = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ListAuthProviders',
  grpc.web.MethodType.UNARY,
  proto.cs3.auth.registry.v1beta1.ListAuthProvidersRequest,
  proto.cs3.gateway.v1beta1.ListAuthProvidersResponse,
  /**
   * @param {!proto.cs3.auth.registry.v1beta1.ListAuthProvidersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.gateway.v1beta1.ListAuthProvidersResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.auth.registry.v1beta1.ListAuthProvidersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.gateway.v1beta1.ListAuthProvidersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.gateway.v1beta1.ListAuthProvidersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.listAuthProviders =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListAuthProviders',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListAuthProviders,
      callback);
};


/**
 * @param {!proto.cs3.auth.registry.v1beta1.ListAuthProvidersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.gateway.v1beta1.ListAuthProvidersResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.listAuthProviders =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListAuthProviders',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListAuthProviders);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.storage.provider.v1beta1.GetHomeRequest,
 *   !proto.cs3.storage.provider.v1beta1.GetHomeResponse>}
 */
const methodDescriptor_GatewayAPI_GetHome = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetHome',
  grpc.web.MethodType.UNARY,
  proto.cs3.storage.provider.v1beta1.GetHomeRequest,
  proto.cs3.storage.provider.v1beta1.GetHomeResponse,
  /**
   * @param {!proto.cs3.storage.provider.v1beta1.GetHomeRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.storage.provider.v1beta1.GetHomeResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.storage.provider.v1beta1.GetHomeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.storage.provider.v1beta1.GetHomeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.storage.provider.v1beta1.GetHomeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getHome =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetHome',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetHome,
      callback);
};


/**
 * @param {!proto.cs3.storage.provider.v1beta1.GetHomeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.storage.provider.v1beta1.GetHomeResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getHome =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetHome',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetHome);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest,
 *   !proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse>}
 */
const methodDescriptor_GatewayAPI_GenerateInviteToken = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GenerateInviteToken',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest,
  proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse,
  /**
   * @param {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.generateInviteToken =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GenerateInviteToken',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GenerateInviteToken,
      callback);
};


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.generateInviteToken =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GenerateInviteToken',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GenerateInviteToken);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.invite.v1beta1.ListInviteTokensRequest,
 *   !proto.cs3.ocm.invite.v1beta1.ListInviteTokensResponse>}
 */
const methodDescriptor_GatewayAPI_ListInviteTokens = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ListInviteTokens',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.invite.v1beta1.ListInviteTokensRequest,
  proto.cs3.ocm.invite.v1beta1.ListInviteTokensResponse,
  /**
   * @param {!proto.cs3.ocm.invite.v1beta1.ListInviteTokensRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.invite.v1beta1.ListInviteTokensResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.ListInviteTokensRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.invite.v1beta1.ListInviteTokensResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.invite.v1beta1.ListInviteTokensResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.listInviteTokens =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListInviteTokens',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListInviteTokens,
      callback);
};


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.ListInviteTokensRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.invite.v1beta1.ListInviteTokensResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.listInviteTokens =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListInviteTokens',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListInviteTokens);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest,
 *   !proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse>}
 */
const methodDescriptor_GatewayAPI_ForwardInvite = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ForwardInvite',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest,
  proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse,
  /**
   * @param {!proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.forwardInvite =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ForwardInvite',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ForwardInvite,
      callback);
};


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.forwardInvite =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ForwardInvite',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ForwardInvite);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest,
 *   !proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse>}
 */
const methodDescriptor_GatewayAPI_AcceptInvite = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/AcceptInvite',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest,
  proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse,
  /**
   * @param {!proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.acceptInvite =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/AcceptInvite',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_AcceptInvite,
      callback);
};


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.acceptInvite =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/AcceptInvite',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_AcceptInvite);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest,
 *   !proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse>}
 */
const methodDescriptor_GatewayAPI_GetAcceptedUser = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetAcceptedUser',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest,
  proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse,
  /**
   * @param {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getAcceptedUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetAcceptedUser',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetAcceptedUser,
      callback);
};


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getAcceptedUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetAcceptedUser',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetAcceptedUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest,
 *   !proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse>}
 */
const methodDescriptor_GatewayAPI_FindAcceptedUsers = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/FindAcceptedUsers',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest,
  proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse,
  /**
   * @param {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.findAcceptedUsers =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/FindAcceptedUsers',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_FindAcceptedUsers,
      callback);
};


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.findAcceptedUsers =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/FindAcceptedUsers',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_FindAcceptedUsers);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserRequest,
 *   !proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserResponse>}
 */
const methodDescriptor_GatewayAPI_DeleteAcceptedUser = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/DeleteAcceptedUser',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserRequest,
  proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserResponse,
  /**
   * @param {!proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.deleteAcceptedUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/DeleteAcceptedUser',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_DeleteAcceptedUser,
      callback);
};


/**
 * @param {!proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.invite.v1beta1.DeleteAcceptedUserResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.deleteAcceptedUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/DeleteAcceptedUser',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_DeleteAcceptedUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.provider.v1beta1.IsProviderAllowedRequest,
 *   !proto.cs3.ocm.provider.v1beta1.IsProviderAllowedResponse>}
 */
const methodDescriptor_GatewayAPI_IsProviderAllowed = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/IsProviderAllowed',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.provider.v1beta1.IsProviderAllowedRequest,
  proto.cs3.ocm.provider.v1beta1.IsProviderAllowedResponse,
  /**
   * @param {!proto.cs3.ocm.provider.v1beta1.IsProviderAllowedRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.provider.v1beta1.IsProviderAllowedResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.provider.v1beta1.IsProviderAllowedRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.provider.v1beta1.IsProviderAllowedResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.provider.v1beta1.IsProviderAllowedResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.isProviderAllowed =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/IsProviderAllowed',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_IsProviderAllowed,
      callback);
};


/**
 * @param {!proto.cs3.ocm.provider.v1beta1.IsProviderAllowedRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.provider.v1beta1.IsProviderAllowedResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.isProviderAllowed =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/IsProviderAllowed',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_IsProviderAllowed);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.provider.v1beta1.GetInfoByDomainRequest,
 *   !proto.cs3.ocm.provider.v1beta1.GetInfoByDomainResponse>}
 */
const methodDescriptor_GatewayAPI_GetInfoByDomain = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetInfoByDomain',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.provider.v1beta1.GetInfoByDomainRequest,
  proto.cs3.ocm.provider.v1beta1.GetInfoByDomainResponse,
  /**
   * @param {!proto.cs3.ocm.provider.v1beta1.GetInfoByDomainRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.provider.v1beta1.GetInfoByDomainResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.provider.v1beta1.GetInfoByDomainRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.provider.v1beta1.GetInfoByDomainResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.provider.v1beta1.GetInfoByDomainResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getInfoByDomain =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetInfoByDomain',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetInfoByDomain,
      callback);
};


/**
 * @param {!proto.cs3.ocm.provider.v1beta1.GetInfoByDomainRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.provider.v1beta1.GetInfoByDomainResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getInfoByDomain =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetInfoByDomain',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetInfoByDomain);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.provider.v1beta1.ListAllProvidersRequest,
 *   !proto.cs3.ocm.provider.v1beta1.ListAllProvidersResponse>}
 */
const methodDescriptor_GatewayAPI_ListAllProviders = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ListAllProviders',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.provider.v1beta1.ListAllProvidersRequest,
  proto.cs3.ocm.provider.v1beta1.ListAllProvidersResponse,
  /**
   * @param {!proto.cs3.ocm.provider.v1beta1.ListAllProvidersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.provider.v1beta1.ListAllProvidersResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.provider.v1beta1.ListAllProvidersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.provider.v1beta1.ListAllProvidersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.provider.v1beta1.ListAllProvidersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.listAllProviders =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListAllProviders',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListAllProviders,
      callback);
};


/**
 * @param {!proto.cs3.ocm.provider.v1beta1.ListAllProvidersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.provider.v1beta1.ListAllProvidersResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.listAllProviders =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListAllProviders',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListAllProviders);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest,
 *   !proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareResponse>}
 */
const methodDescriptor_GatewayAPI_CreateOCMCoreShare = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/CreateOCMCoreShare',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest,
  proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareResponse,
  /**
   * @param {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.createOCMCoreShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CreateOCMCoreShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CreateOCMCoreShare,
      callback);
};


/**
 * @param {!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.core.v1beta1.CreateOCMCoreShareResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.createOCMCoreShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CreateOCMCoreShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CreateOCMCoreShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.core.v1beta1.UpdateOCMCoreShareRequest,
 *   !proto.cs3.ocm.core.v1beta1.UpdateOCMCoreShareResponse>}
 */
const methodDescriptor_GatewayAPI_UpdateOCMCoreShare = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/UpdateOCMCoreShare',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.core.v1beta1.UpdateOCMCoreShareRequest,
  proto.cs3.ocm.core.v1beta1.UpdateOCMCoreShareResponse,
  /**
   * @param {!proto.cs3.ocm.core.v1beta1.UpdateOCMCoreShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.core.v1beta1.UpdateOCMCoreShareResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.core.v1beta1.UpdateOCMCoreShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.core.v1beta1.UpdateOCMCoreShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.core.v1beta1.UpdateOCMCoreShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.updateOCMCoreShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/UpdateOCMCoreShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_UpdateOCMCoreShare,
      callback);
};


/**
 * @param {!proto.cs3.ocm.core.v1beta1.UpdateOCMCoreShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.core.v1beta1.UpdateOCMCoreShareResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.updateOCMCoreShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/UpdateOCMCoreShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_UpdateOCMCoreShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.ocm.core.v1beta1.DeleteOCMCoreShareRequest,
 *   !proto.cs3.ocm.core.v1beta1.DeleteOCMCoreShareResponse>}
 */
const methodDescriptor_GatewayAPI_DeleteOCMCoreShare = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/DeleteOCMCoreShare',
  grpc.web.MethodType.UNARY,
  proto.cs3.ocm.core.v1beta1.DeleteOCMCoreShareRequest,
  proto.cs3.ocm.core.v1beta1.DeleteOCMCoreShareResponse,
  /**
   * @param {!proto.cs3.ocm.core.v1beta1.DeleteOCMCoreShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.ocm.core.v1beta1.DeleteOCMCoreShareResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.ocm.core.v1beta1.DeleteOCMCoreShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.ocm.core.v1beta1.DeleteOCMCoreShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.ocm.core.v1beta1.DeleteOCMCoreShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.deleteOCMCoreShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/DeleteOCMCoreShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_DeleteOCMCoreShare,
      callback);
};


/**
 * @param {!proto.cs3.ocm.core.v1beta1.DeleteOCMCoreShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.ocm.core.v1beta1.DeleteOCMCoreShareResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.deleteOCMCoreShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/DeleteOCMCoreShare',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_DeleteOCMCoreShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.tx.v1beta1.CreateTransferRequest,
 *   !proto.cs3.tx.v1beta1.CreateTransferResponse>}
 */
const methodDescriptor_GatewayAPI_CreateTransfer = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/CreateTransfer',
  grpc.web.MethodType.UNARY,
  proto.cs3.tx.v1beta1.CreateTransferRequest,
  proto.cs3.tx.v1beta1.CreateTransferResponse,
  /**
   * @param {!proto.cs3.tx.v1beta1.CreateTransferRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.tx.v1beta1.CreateTransferResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.tx.v1beta1.CreateTransferRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.tx.v1beta1.CreateTransferResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.tx.v1beta1.CreateTransferResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.createTransfer =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CreateTransfer',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CreateTransfer,
      callback);
};


/**
 * @param {!proto.cs3.tx.v1beta1.CreateTransferRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.tx.v1beta1.CreateTransferResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.createTransfer =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CreateTransfer',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CreateTransfer);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.tx.v1beta1.GetTransferStatusRequest,
 *   !proto.cs3.tx.v1beta1.GetTransferStatusResponse>}
 */
const methodDescriptor_GatewayAPI_GetTransferStatus = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/GetTransferStatus',
  grpc.web.MethodType.UNARY,
  proto.cs3.tx.v1beta1.GetTransferStatusRequest,
  proto.cs3.tx.v1beta1.GetTransferStatusResponse,
  /**
   * @param {!proto.cs3.tx.v1beta1.GetTransferStatusRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.tx.v1beta1.GetTransferStatusResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.tx.v1beta1.GetTransferStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.tx.v1beta1.GetTransferStatusResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.tx.v1beta1.GetTransferStatusResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.getTransferStatus =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetTransferStatus',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetTransferStatus,
      callback);
};


/**
 * @param {!proto.cs3.tx.v1beta1.GetTransferStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.tx.v1beta1.GetTransferStatusResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.getTransferStatus =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/GetTransferStatus',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_GetTransferStatus);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.tx.v1beta1.CancelTransferRequest,
 *   !proto.cs3.tx.v1beta1.CancelTransferResponse>}
 */
const methodDescriptor_GatewayAPI_CancelTransfer = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/CancelTransfer',
  grpc.web.MethodType.UNARY,
  proto.cs3.tx.v1beta1.CancelTransferRequest,
  proto.cs3.tx.v1beta1.CancelTransferResponse,
  /**
   * @param {!proto.cs3.tx.v1beta1.CancelTransferRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.tx.v1beta1.CancelTransferResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.tx.v1beta1.CancelTransferRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.tx.v1beta1.CancelTransferResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.tx.v1beta1.CancelTransferResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.cancelTransfer =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CancelTransfer',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CancelTransfer,
      callback);
};


/**
 * @param {!proto.cs3.tx.v1beta1.CancelTransferRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.tx.v1beta1.CancelTransferResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.cancelTransfer =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CancelTransfer',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CancelTransfer);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.tx.v1beta1.ListTransfersRequest,
 *   !proto.cs3.tx.v1beta1.ListTransfersResponse>}
 */
const methodDescriptor_GatewayAPI_ListTransfers = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/ListTransfers',
  grpc.web.MethodType.UNARY,
  proto.cs3.tx.v1beta1.ListTransfersRequest,
  proto.cs3.tx.v1beta1.ListTransfersResponse,
  /**
   * @param {!proto.cs3.tx.v1beta1.ListTransfersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.tx.v1beta1.ListTransfersResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.tx.v1beta1.ListTransfersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.tx.v1beta1.ListTransfersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.tx.v1beta1.ListTransfersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.listTransfers =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListTransfers',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListTransfers,
      callback);
};


/**
 * @param {!proto.cs3.tx.v1beta1.ListTransfersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.tx.v1beta1.ListTransfersResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.listTransfers =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/ListTransfers',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_ListTransfers);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.tx.v1beta1.RetryTransferRequest,
 *   !proto.cs3.tx.v1beta1.RetryTransferResponse>}
 */
const methodDescriptor_GatewayAPI_RetryTransfer = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/RetryTransfer',
  grpc.web.MethodType.UNARY,
  proto.cs3.tx.v1beta1.RetryTransferRequest,
  proto.cs3.tx.v1beta1.RetryTransferResponse,
  /**
   * @param {!proto.cs3.tx.v1beta1.RetryTransferRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.tx.v1beta1.RetryTransferResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.tx.v1beta1.RetryTransferRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.tx.v1beta1.RetryTransferResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.tx.v1beta1.RetryTransferResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.retryTransfer =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/RetryTransfer',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_RetryTransfer,
      callback);
};


/**
 * @param {!proto.cs3.tx.v1beta1.RetryTransferRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.tx.v1beta1.RetryTransferResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.retryTransfer =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/RetryTransfer',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_RetryTransfer);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.cs3.permissions.v1beta1.CheckPermissionRequest,
 *   !proto.cs3.permissions.v1beta1.CheckPermissionResponse>}
 */
const methodDescriptor_GatewayAPI_CheckPermission = new grpc.web.MethodDescriptor(
  '/cs3.gateway.v1beta1.GatewayAPI/CheckPermission',
  grpc.web.MethodType.UNARY,
  proto.cs3.permissions.v1beta1.CheckPermissionRequest,
  proto.cs3.permissions.v1beta1.CheckPermissionResponse,
  /**
   * @param {!proto.cs3.permissions.v1beta1.CheckPermissionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.cs3.permissions.v1beta1.CheckPermissionResponse.deserializeBinary
);


/**
 * @param {!proto.cs3.permissions.v1beta1.CheckPermissionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.cs3.permissions.v1beta1.CheckPermissionResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.cs3.permissions.v1beta1.CheckPermissionResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.cs3.gateway.v1beta1.GatewayAPIClient.prototype.checkPermission =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CheckPermission',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CheckPermission,
      callback);
};


/**
 * @param {!proto.cs3.permissions.v1beta1.CheckPermissionRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.cs3.permissions.v1beta1.CheckPermissionResponse>}
 *     Promise that resolves to the response
 */
proto.cs3.gateway.v1beta1.GatewayAPIPromiseClient.prototype.checkPermission =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/cs3.gateway.v1beta1.GatewayAPI/CheckPermission',
      request,
      metadata || {},
      methodDescriptor_GatewayAPI_CheckPermission);
};


}); // goog.scope

